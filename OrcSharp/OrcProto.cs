// Generated by protoc-gen-cs, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace orc.proto {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class OrcProto {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_orc_proto_IntegerStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.IntegerStatistics, global::orc.proto.IntegerStatistics.Builder> internal__static_orc_proto_IntegerStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_DoubleStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.DoubleStatistics, global::orc.proto.DoubleStatistics.Builder> internal__static_orc_proto_DoubleStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_StringStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.StringStatistics, global::orc.proto.StringStatistics.Builder> internal__static_orc_proto_StringStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_BucketStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.BucketStatistics, global::orc.proto.BucketStatistics.Builder> internal__static_orc_proto_BucketStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_DecimalStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.DecimalStatistics, global::orc.proto.DecimalStatistics.Builder> internal__static_orc_proto_DecimalStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_DateStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.DateStatistics, global::orc.proto.DateStatistics.Builder> internal__static_orc_proto_DateStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_TimestampStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.TimestampStatistics, global::orc.proto.TimestampStatistics.Builder> internal__static_orc_proto_TimestampStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_BinaryStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.BinaryStatistics, global::orc.proto.BinaryStatistics.Builder> internal__static_orc_proto_BinaryStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_ColumnStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.ColumnStatistics, global::orc.proto.ColumnStatistics.Builder> internal__static_orc_proto_ColumnStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_RowIndexEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.RowIndexEntry, global::orc.proto.RowIndexEntry.Builder> internal__static_orc_proto_RowIndexEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_RowIndex__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.RowIndex, global::orc.proto.RowIndex.Builder> internal__static_orc_proto_RowIndex__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_BloomFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.BloomFilter, global::orc.proto.BloomFilter.Builder> internal__static_orc_proto_BloomFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_BloomFilterIndex__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.BloomFilterIndex, global::orc.proto.BloomFilterIndex.Builder> internal__static_orc_proto_BloomFilterIndex__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_Stream__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.Stream, global::orc.proto.Stream.Builder> internal__static_orc_proto_Stream__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_ColumnEncoding__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.ColumnEncoding, global::orc.proto.ColumnEncoding.Builder> internal__static_orc_proto_ColumnEncoding__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_StripeFooter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.StripeFooter, global::orc.proto.StripeFooter.Builder> internal__static_orc_proto_StripeFooter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_Type__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.Type, global::orc.proto.Type.Builder> internal__static_orc_proto_Type__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_StripeInformation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.StripeInformation, global::orc.proto.StripeInformation.Builder> internal__static_orc_proto_StripeInformation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_UserMetadataItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.UserMetadataItem, global::orc.proto.UserMetadataItem.Builder> internal__static_orc_proto_UserMetadataItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_StripeStatistics__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.StripeStatistics, global::orc.proto.StripeStatistics.Builder> internal__static_orc_proto_StripeStatistics__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_Metadata__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.Metadata, global::orc.proto.Metadata.Builder> internal__static_orc_proto_Metadata__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_Footer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.Footer, global::orc.proto.Footer.Builder> internal__static_orc_proto_Footer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_orc_proto_PostScript__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::orc.proto.PostScript, global::orc.proto.PostScript.Builder> internal__static_orc_proto_PostScript__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static OrcProto() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9vcmNfcHJvdG8ucHJvdG8SCW9yYy5wcm90byJCChFJbnRlZ2VyU3RhdGlz", 
            "dGljcxIPCgdtaW5pbXVtGAEgASgSEg8KB21heGltdW0YAiABKBISCwoDc3Vt", 
            "GAMgASgSIkEKEERvdWJsZVN0YXRpc3RpY3MSDwoHbWluaW11bRgBIAEoARIP", 
            "CgdtYXhpbXVtGAIgASgBEgsKA3N1bRgDIAEoASJBChBTdHJpbmdTdGF0aXN0", 
            "aWNzEg8KB21pbmltdW0YASABKAkSDwoHbWF4aW11bRgCIAEoCRILCgNzdW0Y", 
            "AyABKBIiJQoQQnVja2V0U3RhdGlzdGljcxIRCgVjb3VudBgBIAMoBEICEAEi", 
            "QgoRRGVjaW1hbFN0YXRpc3RpY3MSDwoHbWluaW11bRgBIAEoCRIPCgdtYXhp", 
            "bXVtGAIgASgJEgsKA3N1bRgDIAEoCSIyCg5EYXRlU3RhdGlzdGljcxIPCgdt", 
            "aW5pbXVtGAEgASgREg8KB21heGltdW0YAiABKBEiNwoTVGltZXN0YW1wU3Rh", 
            "dGlzdGljcxIPCgdtaW5pbXVtGAEgASgSEg8KB21heGltdW0YAiABKBIiHwoQ", 
            "QmluYXJ5U3RhdGlzdGljcxILCgNzdW0YASABKBIi9QMKEENvbHVtblN0YXRp", 
            "c3RpY3MSFgoObnVtYmVyT2ZWYWx1ZXMYASABKAQSMwoNaW50U3RhdGlzdGlj", 
            "cxgCIAEoCzIcLm9yYy5wcm90by5JbnRlZ2VyU3RhdGlzdGljcxI1ChBkb3Vi", 
            "bGVTdGF0aXN0aWNzGAMgASgLMhsub3JjLnByb3RvLkRvdWJsZVN0YXRpc3Rp", 
            "Y3MSNQoQc3RyaW5nU3RhdGlzdGljcxgEIAEoCzIbLm9yYy5wcm90by5TdHJp", 
            "bmdTdGF0aXN0aWNzEjUKEGJ1Y2tldFN0YXRpc3RpY3MYBSABKAsyGy5vcmMu", 
            "cHJvdG8uQnVja2V0U3RhdGlzdGljcxI3ChFkZWNpbWFsU3RhdGlzdGljcxgG", 
            "IAEoCzIcLm9yYy5wcm90by5EZWNpbWFsU3RhdGlzdGljcxIxCg5kYXRlU3Rh", 
            "dGlzdGljcxgHIAEoCzIZLm9yYy5wcm90by5EYXRlU3RhdGlzdGljcxI1ChBi", 
            "aW5hcnlTdGF0aXN0aWNzGAggASgLMhsub3JjLnByb3RvLkJpbmFyeVN0YXRp", 
            "c3RpY3MSOwoTdGltZXN0YW1wU3RhdGlzdGljcxgJIAEoCzIeLm9yYy5wcm90", 
            "by5UaW1lc3RhbXBTdGF0aXN0aWNzEg8KB2hhc051bGwYCiABKAgiVwoNUm93", 
            "SW5kZXhFbnRyeRIVCglwb3NpdGlvbnMYASADKARCAhABEi8KCnN0YXRpc3Rp", 
            "Y3MYAiABKAsyGy5vcmMucHJvdG8uQ29sdW1uU3RhdGlzdGljcyIzCghSb3dJ", 
            "bmRleBInCgVlbnRyeRgBIAMoCzIYLm9yYy5wcm90by5Sb3dJbmRleEVudHJ5", 
            "IjcKC0Jsb29tRmlsdGVyEhgKEG51bUhhc2hGdW5jdGlvbnMYASABKA0SDgoG", 
            "Yml0c2V0GAIgAygGIj8KEEJsb29tRmlsdGVySW5kZXgSKwoLYmxvb21GaWx0", 
            "ZXIYASADKAsyFi5vcmMucHJvdG8uQmxvb21GaWx0ZXIi1QEKBlN0cmVhbRIk", 
            "CgRraW5kGAEgASgOMhYub3JjLnByb3RvLlN0cmVhbS5LaW5kEg4KBmNvbHVt", 
            "bhgCIAEoDRIOCgZsZW5ndGgYAyABKAQihAEKBEtpbmQSCwoHUFJFU0VOVBAA", 
            "EggKBERBVEEQARIKCgZMRU5HVEgQAhITCg9ESUNUSU9OQVJZX0RBVEEQAxIU", 
            "ChBESUNUSU9OQVJZX0NPVU5UEAQSDQoJU0VDT05EQVJZEAUSDQoJUk9XX0lO", 
            "REVYEAYSEAoMQkxPT01fRklMVEVSEAcinAEKDkNvbHVtbkVuY29kaW5nEiwK", 
            "BGtpbmQYASABKA4yHi5vcmMucHJvdG8uQ29sdW1uRW5jb2RpbmcuS2luZBIW", 
            "Cg5kaWN0aW9uYXJ5U2l6ZRgCIAEoDSJECgRLaW5kEgoKBkRJUkVDVBAAEg4K", 
            "CkRJQ1RJT05BUlkQARINCglESVJFQ1RfVjIQAhIRCg1ESUNUSU9OQVJZX1Yy", 
            "EAMidgoMU3RyaXBlRm9vdGVyEiIKB3N0cmVhbXMYASADKAsyES5vcmMucHJv", 
            "dG8uU3RyZWFtEioKB2NvbHVtbnMYAiADKAsyGS5vcmMucHJvdG8uQ29sdW1u", 
            "RW5jb2RpbmcSFgoOd3JpdGVyVGltZXpvbmUYAyABKAki4QIKBFR5cGUSIgoE", 
            "a2luZBgBIAEoDjIULm9yYy5wcm90by5UeXBlLktpbmQSFAoIc3VidHlwZXMY", 
            "AiADKA1CAhABEhIKCmZpZWxkTmFtZXMYAyADKAkSFQoNbWF4aW11bUxlbmd0", 
            "aBgEIAEoDRIRCglwcmVjaXNpb24YBSABKA0SDQoFc2NhbGUYBiABKA0i0QEK", 
            "BEtpbmQSCwoHQk9PTEVBThAAEggKBEJZVEUQARIJCgVTSE9SVBACEgcKA0lO", 
            "VBADEggKBExPTkcQBBIJCgVGTE9BVBAFEgoKBkRPVUJMRRAGEgoKBlNUUklO", 
            "RxAHEgoKBkJJTkFSWRAIEg0KCVRJTUVTVEFNUBAJEggKBExJU1QQChIHCgNN", 
            "QVAQCxIKCgZTVFJVQ1QQDBIJCgVVTklPThANEgsKB0RFQ0lNQUwQDhIICgRE", 
            "QVRFEA8SCwoHVkFSQ0hBUhAQEggKBENIQVIQESJ4ChFTdHJpcGVJbmZvcm1h", 
            "dGlvbhIOCgZvZmZzZXQYASABKAQSEwoLaW5kZXhMZW5ndGgYAiABKAQSEgoK", 
            "ZGF0YUxlbmd0aBgDIAEoBBIUCgxmb290ZXJMZW5ndGgYBCABKAQSFAoMbnVt", 
            "YmVyT2ZSb3dzGAUgASgEIi8KEFVzZXJNZXRhZGF0YUl0ZW0SDAoEbmFtZRgB", 
            "IAEoCRINCgV2YWx1ZRgCIAEoDCJBChBTdHJpcGVTdGF0aXN0aWNzEi0KCGNv", 
            "bFN0YXRzGAEgAygLMhsub3JjLnByb3RvLkNvbHVtblN0YXRpc3RpY3MiPAoI", 
            "TWV0YWRhdGESMAoLc3RyaXBlU3RhdHMYASADKAsyGy5vcmMucHJvdG8uU3Ry", 
            "aXBlU3RhdGlzdGljcyKSAgoGRm9vdGVyEhQKDGhlYWRlckxlbmd0aBgBIAEo", 
            "BBIVCg1jb250ZW50TGVuZ3RoGAIgASgEEi0KB3N0cmlwZXMYAyADKAsyHC5v", 
            "cmMucHJvdG8uU3RyaXBlSW5mb3JtYXRpb24SHgoFdHlwZXMYBCADKAsyDy5v", 
            "cmMucHJvdG8uVHlwZRItCghtZXRhZGF0YRgFIAMoCzIbLm9yYy5wcm90by5V", 
            "c2VyTWV0YWRhdGFJdGVtEhQKDG51bWJlck9mUm93cxgGIAEoBBIvCgpzdGF0", 
            "aXN0aWNzGAcgAygLMhsub3JjLnByb3RvLkNvbHVtblN0YXRpc3RpY3MSFgoO", 
            "cm93SW5kZXhTdHJpZGUYCCABKA0ixQEKClBvc3RTY3JpcHQSFAoMZm9vdGVy", 
            "TGVuZ3RoGAEgASgEEi8KC2NvbXByZXNzaW9uGAIgASgOMhoub3JjLnByb3Rv", 
            "LkNvbXByZXNzaW9uS2luZBIcChRjb21wcmVzc2lvbkJsb2NrU2l6ZRgDIAEo", 
            "BBITCgd2ZXJzaW9uGAQgAygNQgIQARIWCg5tZXRhZGF0YUxlbmd0aBgFIAEo", 
            "BBIVCg13cml0ZXJWZXJzaW9uGAYgASgNEg4KBW1hZ2ljGMA+IAEoCSo6Cg9D", 
            "b21wcmVzc2lvbktpbmQSCAoETk9ORRAAEggKBFpMSUIQARIKCgZTTkFQUFkQ", 
            "AhIHCgNMWk8QA0IiCiBvcmcuYXBhY2hlLmhhZG9vcC5oaXZlLnFsLmlvLm9y", 
          "Yw=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_orc_proto_IntegerStatistics__Descriptor = Descriptor.MessageTypes[0];
        internal__static_orc_proto_IntegerStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.IntegerStatistics, global::orc.proto.IntegerStatistics.Builder>(internal__static_orc_proto_IntegerStatistics__Descriptor,
                new string[] { "Minimum", "Maximum", "Sum", });
        internal__static_orc_proto_DoubleStatistics__Descriptor = Descriptor.MessageTypes[1];
        internal__static_orc_proto_DoubleStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.DoubleStatistics, global::orc.proto.DoubleStatistics.Builder>(internal__static_orc_proto_DoubleStatistics__Descriptor,
                new string[] { "Minimum", "Maximum", "Sum", });
        internal__static_orc_proto_StringStatistics__Descriptor = Descriptor.MessageTypes[2];
        internal__static_orc_proto_StringStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.StringStatistics, global::orc.proto.StringStatistics.Builder>(internal__static_orc_proto_StringStatistics__Descriptor,
                new string[] { "Minimum", "Maximum", "Sum", });
        internal__static_orc_proto_BucketStatistics__Descriptor = Descriptor.MessageTypes[3];
        internal__static_orc_proto_BucketStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.BucketStatistics, global::orc.proto.BucketStatistics.Builder>(internal__static_orc_proto_BucketStatistics__Descriptor,
                new string[] { "Count", });
        internal__static_orc_proto_DecimalStatistics__Descriptor = Descriptor.MessageTypes[4];
        internal__static_orc_proto_DecimalStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.DecimalStatistics, global::orc.proto.DecimalStatistics.Builder>(internal__static_orc_proto_DecimalStatistics__Descriptor,
                new string[] { "Minimum", "Maximum", "Sum", });
        internal__static_orc_proto_DateStatistics__Descriptor = Descriptor.MessageTypes[5];
        internal__static_orc_proto_DateStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.DateStatistics, global::orc.proto.DateStatistics.Builder>(internal__static_orc_proto_DateStatistics__Descriptor,
                new string[] { "Minimum", "Maximum", });
        internal__static_orc_proto_TimestampStatistics__Descriptor = Descriptor.MessageTypes[6];
        internal__static_orc_proto_TimestampStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.TimestampStatistics, global::orc.proto.TimestampStatistics.Builder>(internal__static_orc_proto_TimestampStatistics__Descriptor,
                new string[] { "Minimum", "Maximum", });
        internal__static_orc_proto_BinaryStatistics__Descriptor = Descriptor.MessageTypes[7];
        internal__static_orc_proto_BinaryStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.BinaryStatistics, global::orc.proto.BinaryStatistics.Builder>(internal__static_orc_proto_BinaryStatistics__Descriptor,
                new string[] { "Sum", });
        internal__static_orc_proto_ColumnStatistics__Descriptor = Descriptor.MessageTypes[8];
        internal__static_orc_proto_ColumnStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.ColumnStatistics, global::orc.proto.ColumnStatistics.Builder>(internal__static_orc_proto_ColumnStatistics__Descriptor,
                new string[] { "NumberOfValues", "IntStatistics", "DoubleStatistics", "StringStatistics", "BucketStatistics", "DecimalStatistics", "DateStatistics", "BinaryStatistics", "TimestampStatistics", "HasNull", });
        internal__static_orc_proto_RowIndexEntry__Descriptor = Descriptor.MessageTypes[9];
        internal__static_orc_proto_RowIndexEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.RowIndexEntry, global::orc.proto.RowIndexEntry.Builder>(internal__static_orc_proto_RowIndexEntry__Descriptor,
                new string[] { "Positions", "Statistics", });
        internal__static_orc_proto_RowIndex__Descriptor = Descriptor.MessageTypes[10];
        internal__static_orc_proto_RowIndex__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.RowIndex, global::orc.proto.RowIndex.Builder>(internal__static_orc_proto_RowIndex__Descriptor,
                new string[] { "Entry", });
        internal__static_orc_proto_BloomFilter__Descriptor = Descriptor.MessageTypes[11];
        internal__static_orc_proto_BloomFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.BloomFilter, global::orc.proto.BloomFilter.Builder>(internal__static_orc_proto_BloomFilter__Descriptor,
                new string[] { "NumHashFunctions", "Bitset", });
        internal__static_orc_proto_BloomFilterIndex__Descriptor = Descriptor.MessageTypes[12];
        internal__static_orc_proto_BloomFilterIndex__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.BloomFilterIndex, global::orc.proto.BloomFilterIndex.Builder>(internal__static_orc_proto_BloomFilterIndex__Descriptor,
                new string[] { "BloomFilter", });
        internal__static_orc_proto_Stream__Descriptor = Descriptor.MessageTypes[13];
        internal__static_orc_proto_Stream__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.Stream, global::orc.proto.Stream.Builder>(internal__static_orc_proto_Stream__Descriptor,
                new string[] { "Kind", "Column", "Length", });
        internal__static_orc_proto_ColumnEncoding__Descriptor = Descriptor.MessageTypes[14];
        internal__static_orc_proto_ColumnEncoding__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.ColumnEncoding, global::orc.proto.ColumnEncoding.Builder>(internal__static_orc_proto_ColumnEncoding__Descriptor,
                new string[] { "Kind", "DictionarySize", });
        internal__static_orc_proto_StripeFooter__Descriptor = Descriptor.MessageTypes[15];
        internal__static_orc_proto_StripeFooter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.StripeFooter, global::orc.proto.StripeFooter.Builder>(internal__static_orc_proto_StripeFooter__Descriptor,
                new string[] { "Streams", "Columns", "WriterTimezone", });
        internal__static_orc_proto_Type__Descriptor = Descriptor.MessageTypes[16];
        internal__static_orc_proto_Type__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.Type, global::orc.proto.Type.Builder>(internal__static_orc_proto_Type__Descriptor,
                new string[] { "Kind", "Subtypes", "FieldNames", "MaximumLength", "Precision", "Scale", });
        internal__static_orc_proto_StripeInformation__Descriptor = Descriptor.MessageTypes[17];
        internal__static_orc_proto_StripeInformation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.StripeInformation, global::orc.proto.StripeInformation.Builder>(internal__static_orc_proto_StripeInformation__Descriptor,
                new string[] { "Offset", "IndexLength", "DataLength", "FooterLength", "NumberOfRows", });
        internal__static_orc_proto_UserMetadataItem__Descriptor = Descriptor.MessageTypes[18];
        internal__static_orc_proto_UserMetadataItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.UserMetadataItem, global::orc.proto.UserMetadataItem.Builder>(internal__static_orc_proto_UserMetadataItem__Descriptor,
                new string[] { "Name", "Value", });
        internal__static_orc_proto_StripeStatistics__Descriptor = Descriptor.MessageTypes[19];
        internal__static_orc_proto_StripeStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.StripeStatistics, global::orc.proto.StripeStatistics.Builder>(internal__static_orc_proto_StripeStatistics__Descriptor,
                new string[] { "ColStats", });
        internal__static_orc_proto_Metadata__Descriptor = Descriptor.MessageTypes[20];
        internal__static_orc_proto_Metadata__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.Metadata, global::orc.proto.Metadata.Builder>(internal__static_orc_proto_Metadata__Descriptor,
                new string[] { "StripeStats", });
        internal__static_orc_proto_Footer__Descriptor = Descriptor.MessageTypes[21];
        internal__static_orc_proto_Footer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.Footer, global::orc.proto.Footer.Builder>(internal__static_orc_proto_Footer__Descriptor,
                new string[] { "HeaderLength", "ContentLength", "Stripes", "Types", "Metadata", "NumberOfRows", "Statistics", "RowIndexStride", });
        internal__static_orc_proto_PostScript__Descriptor = Descriptor.MessageTypes[22];
        internal__static_orc_proto_PostScript__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::orc.proto.PostScript, global::orc.proto.PostScript.Builder>(internal__static_orc_proto_PostScript__Descriptor,
                new string[] { "FooterLength", "Compression", "CompressionBlockSize", "Version", "MetadataLength", "WriterVersion", "Magic", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum CompressionKind {
    NONE = 0,
    ZLIB = 1,
    SNAPPY = 2,
    LZO = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IntegerStatistics : pb::GeneratedMessage<IntegerStatistics, IntegerStatistics.Builder> {
    private IntegerStatistics() { }
    private static readonly IntegerStatistics defaultInstance = new IntegerStatistics().MakeReadOnly();
    private static readonly string[] _integerStatisticsFieldNames = new string[] { "maximum", "minimum", "sum" };
    private static readonly uint[] _integerStatisticsFieldTags = new uint[] { 16, 8, 24 };
    public static IntegerStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IntegerStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IntegerStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_IntegerStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IntegerStatistics, IntegerStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_IntegerStatistics__FieldAccessorTable; }
    }
    
    public const int MinimumFieldNumber = 1;
    private bool hasMinimum;
    private long minimum_;
    public bool HasMinimum {
      get { return hasMinimum; }
    }
    public long Minimum {
      get { return minimum_; }
    }
    
    public const int MaximumFieldNumber = 2;
    private bool hasMaximum;
    private long maximum_;
    public bool HasMaximum {
      get { return hasMaximum; }
    }
    public long Maximum {
      get { return maximum_; }
    }
    
    public const int SumFieldNumber = 3;
    private bool hasSum;
    private long sum_;
    public bool HasSum {
      get { return hasSum; }
    }
    public long Sum {
      get { return sum_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _integerStatisticsFieldNames;
      if (hasMinimum) {
        output.WriteSInt64(1, field_names[1], Minimum);
      }
      if (hasMaximum) {
        output.WriteSInt64(2, field_names[0], Maximum);
      }
      if (hasSum) {
        output.WriteSInt64(3, field_names[2], Sum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMinimum) {
        size += pb::CodedOutputStream.ComputeSInt64Size(1, Minimum);
      }
      if (hasMaximum) {
        size += pb::CodedOutputStream.ComputeSInt64Size(2, Maximum);
      }
      if (hasSum) {
        size += pb::CodedOutputStream.ComputeSInt64Size(3, Sum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IntegerStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IntegerStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IntegerStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IntegerStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IntegerStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IntegerStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IntegerStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IntegerStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IntegerStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IntegerStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IntegerStatistics MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IntegerStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IntegerStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IntegerStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IntegerStatistics result;
      
      private IntegerStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          IntegerStatistics original = result;
          result = new IntegerStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IntegerStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.IntegerStatistics.Descriptor; }
      }
      
      public override IntegerStatistics DefaultInstanceForType {
        get { return global::orc.proto.IntegerStatistics.DefaultInstance; }
      }
      
      public override IntegerStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IntegerStatistics) {
          return MergeFrom((IntegerStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IntegerStatistics other) {
        if (other == global::orc.proto.IntegerStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMinimum) {
          Minimum = other.Minimum;
        }
        if (other.HasMaximum) {
          Maximum = other.Maximum;
        }
        if (other.HasSum) {
          Sum = other.Sum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_integerStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _integerStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMinimum = input.ReadSInt64(ref result.minimum_);
              break;
            }
            case 16: {
              result.hasMaximum = input.ReadSInt64(ref result.maximum_);
              break;
            }
            case 24: {
              result.hasSum = input.ReadSInt64(ref result.sum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMinimum {
        get { return result.hasMinimum; }
      }
      public long Minimum {
        get { return result.Minimum; }
        set { SetMinimum(value); }
      }
      public Builder SetMinimum(long value) {
        PrepareBuilder();
        result.hasMinimum = true;
        result.minimum_ = value;
        return this;
      }
      public Builder ClearMinimum() {
        PrepareBuilder();
        result.hasMinimum = false;
        result.minimum_ = 0;
        return this;
      }
      
      public bool HasMaximum {
        get { return result.hasMaximum; }
      }
      public long Maximum {
        get { return result.Maximum; }
        set { SetMaximum(value); }
      }
      public Builder SetMaximum(long value) {
        PrepareBuilder();
        result.hasMaximum = true;
        result.maximum_ = value;
        return this;
      }
      public Builder ClearMaximum() {
        PrepareBuilder();
        result.hasMaximum = false;
        result.maximum_ = 0;
        return this;
      }
      
      public bool HasSum {
        get { return result.hasSum; }
      }
      public long Sum {
        get { return result.Sum; }
        set { SetSum(value); }
      }
      public Builder SetSum(long value) {
        PrepareBuilder();
        result.hasSum = true;
        result.sum_ = value;
        return this;
      }
      public Builder ClearSum() {
        PrepareBuilder();
        result.hasSum = false;
        result.sum_ = 0;
        return this;
      }
    }
    static IntegerStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DoubleStatistics : pb::GeneratedMessage<DoubleStatistics, DoubleStatistics.Builder> {
    private DoubleStatistics() { }
    private static readonly DoubleStatistics defaultInstance = new DoubleStatistics().MakeReadOnly();
    private static readonly string[] _doubleStatisticsFieldNames = new string[] { "maximum", "minimum", "sum" };
    private static readonly uint[] _doubleStatisticsFieldTags = new uint[] { 17, 9, 25 };
    public static DoubleStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DoubleStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DoubleStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_DoubleStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DoubleStatistics, DoubleStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_DoubleStatistics__FieldAccessorTable; }
    }
    
    public const int MinimumFieldNumber = 1;
    private bool hasMinimum;
    private double minimum_;
    public bool HasMinimum {
      get { return hasMinimum; }
    }
    public double Minimum {
      get { return minimum_; }
    }
    
    public const int MaximumFieldNumber = 2;
    private bool hasMaximum;
    private double maximum_;
    public bool HasMaximum {
      get { return hasMaximum; }
    }
    public double Maximum {
      get { return maximum_; }
    }
    
    public const int SumFieldNumber = 3;
    private bool hasSum;
    private double sum_;
    public bool HasSum {
      get { return hasSum; }
    }
    public double Sum {
      get { return sum_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _doubleStatisticsFieldNames;
      if (hasMinimum) {
        output.WriteDouble(1, field_names[1], Minimum);
      }
      if (hasMaximum) {
        output.WriteDouble(2, field_names[0], Maximum);
      }
      if (hasSum) {
        output.WriteDouble(3, field_names[2], Sum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMinimum) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, Minimum);
      }
      if (hasMaximum) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, Maximum);
      }
      if (hasSum) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, Sum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DoubleStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DoubleStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DoubleStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DoubleStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DoubleStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DoubleStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DoubleStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DoubleStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DoubleStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DoubleStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DoubleStatistics MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DoubleStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DoubleStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DoubleStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DoubleStatistics result;
      
      private DoubleStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          DoubleStatistics original = result;
          result = new DoubleStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DoubleStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.DoubleStatistics.Descriptor; }
      }
      
      public override DoubleStatistics DefaultInstanceForType {
        get { return global::orc.proto.DoubleStatistics.DefaultInstance; }
      }
      
      public override DoubleStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DoubleStatistics) {
          return MergeFrom((DoubleStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DoubleStatistics other) {
        if (other == global::orc.proto.DoubleStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMinimum) {
          Minimum = other.Minimum;
        }
        if (other.HasMaximum) {
          Maximum = other.Maximum;
        }
        if (other.HasSum) {
          Sum = other.Sum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_doubleStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _doubleStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasMinimum = input.ReadDouble(ref result.minimum_);
              break;
            }
            case 17: {
              result.hasMaximum = input.ReadDouble(ref result.maximum_);
              break;
            }
            case 25: {
              result.hasSum = input.ReadDouble(ref result.sum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMinimum {
        get { return result.hasMinimum; }
      }
      public double Minimum {
        get { return result.Minimum; }
        set { SetMinimum(value); }
      }
      public Builder SetMinimum(double value) {
        PrepareBuilder();
        result.hasMinimum = true;
        result.minimum_ = value;
        return this;
      }
      public Builder ClearMinimum() {
        PrepareBuilder();
        result.hasMinimum = false;
        result.minimum_ = 0D;
        return this;
      }
      
      public bool HasMaximum {
        get { return result.hasMaximum; }
      }
      public double Maximum {
        get { return result.Maximum; }
        set { SetMaximum(value); }
      }
      public Builder SetMaximum(double value) {
        PrepareBuilder();
        result.hasMaximum = true;
        result.maximum_ = value;
        return this;
      }
      public Builder ClearMaximum() {
        PrepareBuilder();
        result.hasMaximum = false;
        result.maximum_ = 0D;
        return this;
      }
      
      public bool HasSum {
        get { return result.hasSum; }
      }
      public double Sum {
        get { return result.Sum; }
        set { SetSum(value); }
      }
      public Builder SetSum(double value) {
        PrepareBuilder();
        result.hasSum = true;
        result.sum_ = value;
        return this;
      }
      public Builder ClearSum() {
        PrepareBuilder();
        result.hasSum = false;
        result.sum_ = 0D;
        return this;
      }
    }
    static DoubleStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StringStatistics : pb::GeneratedMessage<StringStatistics, StringStatistics.Builder> {
    private StringStatistics() { }
    private static readonly StringStatistics defaultInstance = new StringStatistics().MakeReadOnly();
    private static readonly string[] _stringStatisticsFieldNames = new string[] { "maximum", "minimum", "sum" };
    private static readonly uint[] _stringStatisticsFieldTags = new uint[] { 18, 10, 24 };
    public static StringStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StringStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StringStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_StringStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StringStatistics, StringStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_StringStatistics__FieldAccessorTable; }
    }
    
    public const int MinimumFieldNumber = 1;
    private bool hasMinimum;
    private string minimum_ = "";
    public bool HasMinimum {
      get { return hasMinimum; }
    }
    public string Minimum {
      get { return minimum_; }
    }
    
    public const int MaximumFieldNumber = 2;
    private bool hasMaximum;
    private string maximum_ = "";
    public bool HasMaximum {
      get { return hasMaximum; }
    }
    public string Maximum {
      get { return maximum_; }
    }
    
    public const int SumFieldNumber = 3;
    private bool hasSum;
    private long sum_;
    public bool HasSum {
      get { return hasSum; }
    }
    public long Sum {
      get { return sum_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _stringStatisticsFieldNames;
      if (hasMinimum) {
        output.WriteString(1, field_names[1], Minimum);
      }
      if (hasMaximum) {
        output.WriteString(2, field_names[0], Maximum);
      }
      if (hasSum) {
        output.WriteSInt64(3, field_names[2], Sum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMinimum) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Minimum);
      }
      if (hasMaximum) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Maximum);
      }
      if (hasSum) {
        size += pb::CodedOutputStream.ComputeSInt64Size(3, Sum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StringStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StringStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StringStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StringStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StringStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StringStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StringStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StringStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StringStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StringStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StringStatistics MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StringStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StringStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StringStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StringStatistics result;
      
      private StringStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          StringStatistics original = result;
          result = new StringStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StringStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.StringStatistics.Descriptor; }
      }
      
      public override StringStatistics DefaultInstanceForType {
        get { return global::orc.proto.StringStatistics.DefaultInstance; }
      }
      
      public override StringStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StringStatistics) {
          return MergeFrom((StringStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StringStatistics other) {
        if (other == global::orc.proto.StringStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMinimum) {
          Minimum = other.Minimum;
        }
        if (other.HasMaximum) {
          Maximum = other.Maximum;
        }
        if (other.HasSum) {
          Sum = other.Sum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stringStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stringStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMinimum = input.ReadString(ref result.minimum_);
              break;
            }
            case 18: {
              result.hasMaximum = input.ReadString(ref result.maximum_);
              break;
            }
            case 24: {
              result.hasSum = input.ReadSInt64(ref result.sum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMinimum {
        get { return result.hasMinimum; }
      }
      public string Minimum {
        get { return result.Minimum; }
        set { SetMinimum(value); }
      }
      public Builder SetMinimum(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMinimum = true;
        result.minimum_ = value;
        return this;
      }
      public Builder ClearMinimum() {
        PrepareBuilder();
        result.hasMinimum = false;
        result.minimum_ = "";
        return this;
      }
      
      public bool HasMaximum {
        get { return result.hasMaximum; }
      }
      public string Maximum {
        get { return result.Maximum; }
        set { SetMaximum(value); }
      }
      public Builder SetMaximum(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMaximum = true;
        result.maximum_ = value;
        return this;
      }
      public Builder ClearMaximum() {
        PrepareBuilder();
        result.hasMaximum = false;
        result.maximum_ = "";
        return this;
      }
      
      public bool HasSum {
        get { return result.hasSum; }
      }
      public long Sum {
        get { return result.Sum; }
        set { SetSum(value); }
      }
      public Builder SetSum(long value) {
        PrepareBuilder();
        result.hasSum = true;
        result.sum_ = value;
        return this;
      }
      public Builder ClearSum() {
        PrepareBuilder();
        result.hasSum = false;
        result.sum_ = 0;
        return this;
      }
    }
    static StringStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BucketStatistics : pb::GeneratedMessage<BucketStatistics, BucketStatistics.Builder> {
    private BucketStatistics() { }
    private static readonly BucketStatistics defaultInstance = new BucketStatistics().MakeReadOnly();
    private static readonly string[] _bucketStatisticsFieldNames = new string[] { "count" };
    private static readonly uint[] _bucketStatisticsFieldTags = new uint[] { 10 };
    public static BucketStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BucketStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BucketStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_BucketStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BucketStatistics, BucketStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_BucketStatistics__FieldAccessorTable; }
    }
    
    public const int CountFieldNumber = 1;
    private int countMemoizedSerializedSize;
    private pbc::PopsicleList<ulong> count_ = new pbc::PopsicleList<ulong>();
    [global::System.CLSCompliant(false)]
    public scg::IList<ulong> CountList {
      get { return pbc::Lists.AsReadOnly(count_); }
    }
    public int CountCount {
      get { return count_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetCount(int index) {
      return count_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _bucketStatisticsFieldNames;
      if (count_.Count > 0) {
        output.WritePackedUInt64Array(1, field_names[0], countMemoizedSerializedSize, count_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (ulong element in CountList) {
          dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
        }
        size += dataSize;
        if (count_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        countMemoizedSerializedSize = dataSize;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BucketStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BucketStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BucketStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BucketStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BucketStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BucketStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BucketStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BucketStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BucketStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BucketStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BucketStatistics MakeReadOnly() {
      count_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BucketStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BucketStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BucketStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BucketStatistics result;
      
      private BucketStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          BucketStatistics original = result;
          result = new BucketStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BucketStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.BucketStatistics.Descriptor; }
      }
      
      public override BucketStatistics DefaultInstanceForType {
        get { return global::orc.proto.BucketStatistics.DefaultInstance; }
      }
      
      public override BucketStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BucketStatistics) {
          return MergeFrom((BucketStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BucketStatistics other) {
        if (other == global::orc.proto.BucketStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.count_.Count != 0) {
          result.count_.Add(other.count_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bucketStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bucketStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadUInt64Array(tag, field_name, result.count_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<ulong> CountList {
        get { return PrepareBuilder().count_; }
      }
      public int CountCount {
        get { return result.CountCount; }
      }
      [global::System.CLSCompliant(false)]
      public ulong GetCount(int index) {
        return result.GetCount(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCount(int index, ulong value) {
        PrepareBuilder();
        result.count_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddCount(ulong value) {
        PrepareBuilder();
        result.count_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeCount(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.count_.Add(values);
        return this;
      }
      public Builder ClearCount() {
        PrepareBuilder();
        result.count_.Clear();
        return this;
      }
    }
    static BucketStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DecimalStatistics : pb::GeneratedMessage<DecimalStatistics, DecimalStatistics.Builder> {
    private DecimalStatistics() { }
    private static readonly DecimalStatistics defaultInstance = new DecimalStatistics().MakeReadOnly();
    private static readonly string[] _decimalStatisticsFieldNames = new string[] { "maximum", "minimum", "sum" };
    private static readonly uint[] _decimalStatisticsFieldTags = new uint[] { 18, 10, 26 };
    public static DecimalStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DecimalStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DecimalStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_DecimalStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DecimalStatistics, DecimalStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_DecimalStatistics__FieldAccessorTable; }
    }
    
    public const int MinimumFieldNumber = 1;
    private bool hasMinimum;
    private string minimum_ = "";
    public bool HasMinimum {
      get { return hasMinimum; }
    }
    public string Minimum {
      get { return minimum_; }
    }
    
    public const int MaximumFieldNumber = 2;
    private bool hasMaximum;
    private string maximum_ = "";
    public bool HasMaximum {
      get { return hasMaximum; }
    }
    public string Maximum {
      get { return maximum_; }
    }
    
    public const int SumFieldNumber = 3;
    private bool hasSum;
    private string sum_ = "";
    public bool HasSum {
      get { return hasSum; }
    }
    public string Sum {
      get { return sum_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _decimalStatisticsFieldNames;
      if (hasMinimum) {
        output.WriteString(1, field_names[1], Minimum);
      }
      if (hasMaximum) {
        output.WriteString(2, field_names[0], Maximum);
      }
      if (hasSum) {
        output.WriteString(3, field_names[2], Sum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMinimum) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Minimum);
      }
      if (hasMaximum) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Maximum);
      }
      if (hasSum) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Sum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DecimalStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DecimalStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DecimalStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DecimalStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DecimalStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DecimalStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DecimalStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DecimalStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DecimalStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DecimalStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DecimalStatistics MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DecimalStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DecimalStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DecimalStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DecimalStatistics result;
      
      private DecimalStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          DecimalStatistics original = result;
          result = new DecimalStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DecimalStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.DecimalStatistics.Descriptor; }
      }
      
      public override DecimalStatistics DefaultInstanceForType {
        get { return global::orc.proto.DecimalStatistics.DefaultInstance; }
      }
      
      public override DecimalStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DecimalStatistics) {
          return MergeFrom((DecimalStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DecimalStatistics other) {
        if (other == global::orc.proto.DecimalStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMinimum) {
          Minimum = other.Minimum;
        }
        if (other.HasMaximum) {
          Maximum = other.Maximum;
        }
        if (other.HasSum) {
          Sum = other.Sum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_decimalStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _decimalStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMinimum = input.ReadString(ref result.minimum_);
              break;
            }
            case 18: {
              result.hasMaximum = input.ReadString(ref result.maximum_);
              break;
            }
            case 26: {
              result.hasSum = input.ReadString(ref result.sum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMinimum {
        get { return result.hasMinimum; }
      }
      public string Minimum {
        get { return result.Minimum; }
        set { SetMinimum(value); }
      }
      public Builder SetMinimum(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMinimum = true;
        result.minimum_ = value;
        return this;
      }
      public Builder ClearMinimum() {
        PrepareBuilder();
        result.hasMinimum = false;
        result.minimum_ = "";
        return this;
      }
      
      public bool HasMaximum {
        get { return result.hasMaximum; }
      }
      public string Maximum {
        get { return result.Maximum; }
        set { SetMaximum(value); }
      }
      public Builder SetMaximum(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMaximum = true;
        result.maximum_ = value;
        return this;
      }
      public Builder ClearMaximum() {
        PrepareBuilder();
        result.hasMaximum = false;
        result.maximum_ = "";
        return this;
      }
      
      public bool HasSum {
        get { return result.hasSum; }
      }
      public string Sum {
        get { return result.Sum; }
        set { SetSum(value); }
      }
      public Builder SetSum(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSum = true;
        result.sum_ = value;
        return this;
      }
      public Builder ClearSum() {
        PrepareBuilder();
        result.hasSum = false;
        result.sum_ = "";
        return this;
      }
    }
    static DecimalStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DateStatistics : pb::GeneratedMessage<DateStatistics, DateStatistics.Builder> {
    private DateStatistics() { }
    private static readonly DateStatistics defaultInstance = new DateStatistics().MakeReadOnly();
    private static readonly string[] _dateStatisticsFieldNames = new string[] { "maximum", "minimum" };
    private static readonly uint[] _dateStatisticsFieldTags = new uint[] { 16, 8 };
    public static DateStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DateStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DateStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_DateStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DateStatistics, DateStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_DateStatistics__FieldAccessorTable; }
    }
    
    public const int MinimumFieldNumber = 1;
    private bool hasMinimum;
    private int minimum_;
    public bool HasMinimum {
      get { return hasMinimum; }
    }
    public int Minimum {
      get { return minimum_; }
    }
    
    public const int MaximumFieldNumber = 2;
    private bool hasMaximum;
    private int maximum_;
    public bool HasMaximum {
      get { return hasMaximum; }
    }
    public int Maximum {
      get { return maximum_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _dateStatisticsFieldNames;
      if (hasMinimum) {
        output.WriteSInt32(1, field_names[1], Minimum);
      }
      if (hasMaximum) {
        output.WriteSInt32(2, field_names[0], Maximum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMinimum) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, Minimum);
      }
      if (hasMaximum) {
        size += pb::CodedOutputStream.ComputeSInt32Size(2, Maximum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DateStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DateStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DateStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DateStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DateStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DateStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DateStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DateStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DateStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DateStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DateStatistics MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DateStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DateStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DateStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DateStatistics result;
      
      private DateStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          DateStatistics original = result;
          result = new DateStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DateStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.DateStatistics.Descriptor; }
      }
      
      public override DateStatistics DefaultInstanceForType {
        get { return global::orc.proto.DateStatistics.DefaultInstance; }
      }
      
      public override DateStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DateStatistics) {
          return MergeFrom((DateStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DateStatistics other) {
        if (other == global::orc.proto.DateStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMinimum) {
          Minimum = other.Minimum;
        }
        if (other.HasMaximum) {
          Maximum = other.Maximum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dateStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dateStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMinimum = input.ReadSInt32(ref result.minimum_);
              break;
            }
            case 16: {
              result.hasMaximum = input.ReadSInt32(ref result.maximum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMinimum {
        get { return result.hasMinimum; }
      }
      public int Minimum {
        get { return result.Minimum; }
        set { SetMinimum(value); }
      }
      public Builder SetMinimum(int value) {
        PrepareBuilder();
        result.hasMinimum = true;
        result.minimum_ = value;
        return this;
      }
      public Builder ClearMinimum() {
        PrepareBuilder();
        result.hasMinimum = false;
        result.minimum_ = 0;
        return this;
      }
      
      public bool HasMaximum {
        get { return result.hasMaximum; }
      }
      public int Maximum {
        get { return result.Maximum; }
        set { SetMaximum(value); }
      }
      public Builder SetMaximum(int value) {
        PrepareBuilder();
        result.hasMaximum = true;
        result.maximum_ = value;
        return this;
      }
      public Builder ClearMaximum() {
        PrepareBuilder();
        result.hasMaximum = false;
        result.maximum_ = 0;
        return this;
      }
    }
    static DateStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TimestampStatistics : pb::GeneratedMessage<TimestampStatistics, TimestampStatistics.Builder> {
    private TimestampStatistics() { }
    private static readonly TimestampStatistics defaultInstance = new TimestampStatistics().MakeReadOnly();
    private static readonly string[] _timestampStatisticsFieldNames = new string[] { "maximum", "minimum" };
    private static readonly uint[] _timestampStatisticsFieldTags = new uint[] { 16, 8 };
    public static TimestampStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TimestampStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TimestampStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_TimestampStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TimestampStatistics, TimestampStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_TimestampStatistics__FieldAccessorTable; }
    }
    
    public const int MinimumFieldNumber = 1;
    private bool hasMinimum;
    private long minimum_;
    public bool HasMinimum {
      get { return hasMinimum; }
    }
    public long Minimum {
      get { return minimum_; }
    }
    
    public const int MaximumFieldNumber = 2;
    private bool hasMaximum;
    private long maximum_;
    public bool HasMaximum {
      get { return hasMaximum; }
    }
    public long Maximum {
      get { return maximum_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _timestampStatisticsFieldNames;
      if (hasMinimum) {
        output.WriteSInt64(1, field_names[1], Minimum);
      }
      if (hasMaximum) {
        output.WriteSInt64(2, field_names[0], Maximum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMinimum) {
        size += pb::CodedOutputStream.ComputeSInt64Size(1, Minimum);
      }
      if (hasMaximum) {
        size += pb::CodedOutputStream.ComputeSInt64Size(2, Maximum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TimestampStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TimestampStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TimestampStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TimestampStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TimestampStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TimestampStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TimestampStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TimestampStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TimestampStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TimestampStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TimestampStatistics MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TimestampStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TimestampStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TimestampStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TimestampStatistics result;
      
      private TimestampStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          TimestampStatistics original = result;
          result = new TimestampStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TimestampStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.TimestampStatistics.Descriptor; }
      }
      
      public override TimestampStatistics DefaultInstanceForType {
        get { return global::orc.proto.TimestampStatistics.DefaultInstance; }
      }
      
      public override TimestampStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TimestampStatistics) {
          return MergeFrom((TimestampStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TimestampStatistics other) {
        if (other == global::orc.proto.TimestampStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMinimum) {
          Minimum = other.Minimum;
        }
        if (other.HasMaximum) {
          Maximum = other.Maximum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_timestampStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _timestampStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMinimum = input.ReadSInt64(ref result.minimum_);
              break;
            }
            case 16: {
              result.hasMaximum = input.ReadSInt64(ref result.maximum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMinimum {
        get { return result.hasMinimum; }
      }
      public long Minimum {
        get { return result.Minimum; }
        set { SetMinimum(value); }
      }
      public Builder SetMinimum(long value) {
        PrepareBuilder();
        result.hasMinimum = true;
        result.minimum_ = value;
        return this;
      }
      public Builder ClearMinimum() {
        PrepareBuilder();
        result.hasMinimum = false;
        result.minimum_ = 0;
        return this;
      }
      
      public bool HasMaximum {
        get { return result.hasMaximum; }
      }
      public long Maximum {
        get { return result.Maximum; }
        set { SetMaximum(value); }
      }
      public Builder SetMaximum(long value) {
        PrepareBuilder();
        result.hasMaximum = true;
        result.maximum_ = value;
        return this;
      }
      public Builder ClearMaximum() {
        PrepareBuilder();
        result.hasMaximum = false;
        result.maximum_ = 0;
        return this;
      }
    }
    static TimestampStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BinaryStatistics : pb::GeneratedMessage<BinaryStatistics, BinaryStatistics.Builder> {
    private BinaryStatistics() { }
    private static readonly BinaryStatistics defaultInstance = new BinaryStatistics().MakeReadOnly();
    private static readonly string[] _binaryStatisticsFieldNames = new string[] { "sum" };
    private static readonly uint[] _binaryStatisticsFieldTags = new uint[] { 8 };
    public static BinaryStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BinaryStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BinaryStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_BinaryStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BinaryStatistics, BinaryStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_BinaryStatistics__FieldAccessorTable; }
    }
    
    public const int SumFieldNumber = 1;
    private bool hasSum;
    private long sum_;
    public bool HasSum {
      get { return hasSum; }
    }
    public long Sum {
      get { return sum_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _binaryStatisticsFieldNames;
      if (hasSum) {
        output.WriteSInt64(1, field_names[0], Sum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSum) {
        size += pb::CodedOutputStream.ComputeSInt64Size(1, Sum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BinaryStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BinaryStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BinaryStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BinaryStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BinaryStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BinaryStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BinaryStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BinaryStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BinaryStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BinaryStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BinaryStatistics MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BinaryStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BinaryStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BinaryStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BinaryStatistics result;
      
      private BinaryStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          BinaryStatistics original = result;
          result = new BinaryStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BinaryStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.BinaryStatistics.Descriptor; }
      }
      
      public override BinaryStatistics DefaultInstanceForType {
        get { return global::orc.proto.BinaryStatistics.DefaultInstance; }
      }
      
      public override BinaryStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BinaryStatistics) {
          return MergeFrom((BinaryStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BinaryStatistics other) {
        if (other == global::orc.proto.BinaryStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSum) {
          Sum = other.Sum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_binaryStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _binaryStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSum = input.ReadSInt64(ref result.sum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSum {
        get { return result.hasSum; }
      }
      public long Sum {
        get { return result.Sum; }
        set { SetSum(value); }
      }
      public Builder SetSum(long value) {
        PrepareBuilder();
        result.hasSum = true;
        result.sum_ = value;
        return this;
      }
      public Builder ClearSum() {
        PrepareBuilder();
        result.hasSum = false;
        result.sum_ = 0;
        return this;
      }
    }
    static BinaryStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ColumnStatistics : pb::GeneratedMessage<ColumnStatistics, ColumnStatistics.Builder> {
    private ColumnStatistics() { }
    private static readonly ColumnStatistics defaultInstance = new ColumnStatistics().MakeReadOnly();
    private static readonly string[] _columnStatisticsFieldNames = new string[] { "binaryStatistics", "bucketStatistics", "dateStatistics", "decimalStatistics", "doubleStatistics", "hasNull", "intStatistics", "numberOfValues", "stringStatistics", "timestampStatistics" };
    private static readonly uint[] _columnStatisticsFieldTags = new uint[] { 66, 42, 58, 50, 26, 80, 18, 8, 34, 74 };
    public static ColumnStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ColumnStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ColumnStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_ColumnStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ColumnStatistics, ColumnStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_ColumnStatistics__FieldAccessorTable; }
    }
    
    public const int NumberOfValuesFieldNumber = 1;
    private bool hasNumberOfValues;
    private ulong numberOfValues_;
    public bool HasNumberOfValues {
      get { return hasNumberOfValues; }
    }
    [global::System.CLSCompliant(false)]
    public ulong NumberOfValues {
      get { return numberOfValues_; }
    }
    
    public const int IntStatisticsFieldNumber = 2;
    private bool hasIntStatistics;
    private global::orc.proto.IntegerStatistics intStatistics_;
    public bool HasIntStatistics {
      get { return hasIntStatistics; }
    }
    public global::orc.proto.IntegerStatistics IntStatistics {
      get { return intStatistics_ ?? global::orc.proto.IntegerStatistics.DefaultInstance; }
    }
    
    public const int DoubleStatisticsFieldNumber = 3;
    private bool hasDoubleStatistics;
    private global::orc.proto.DoubleStatistics doubleStatistics_;
    public bool HasDoubleStatistics {
      get { return hasDoubleStatistics; }
    }
    public global::orc.proto.DoubleStatistics DoubleStatistics {
      get { return doubleStatistics_ ?? global::orc.proto.DoubleStatistics.DefaultInstance; }
    }
    
    public const int StringStatisticsFieldNumber = 4;
    private bool hasStringStatistics;
    private global::orc.proto.StringStatistics stringStatistics_;
    public bool HasStringStatistics {
      get { return hasStringStatistics; }
    }
    public global::orc.proto.StringStatistics StringStatistics {
      get { return stringStatistics_ ?? global::orc.proto.StringStatistics.DefaultInstance; }
    }
    
    public const int BucketStatisticsFieldNumber = 5;
    private bool hasBucketStatistics;
    private global::orc.proto.BucketStatistics bucketStatistics_;
    public bool HasBucketStatistics {
      get { return hasBucketStatistics; }
    }
    public global::orc.proto.BucketStatistics BucketStatistics {
      get { return bucketStatistics_ ?? global::orc.proto.BucketStatistics.DefaultInstance; }
    }
    
    public const int DecimalStatisticsFieldNumber = 6;
    private bool hasDecimalStatistics;
    private global::orc.proto.DecimalStatistics decimalStatistics_;
    public bool HasDecimalStatistics {
      get { return hasDecimalStatistics; }
    }
    public global::orc.proto.DecimalStatistics DecimalStatistics {
      get { return decimalStatistics_ ?? global::orc.proto.DecimalStatistics.DefaultInstance; }
    }
    
    public const int DateStatisticsFieldNumber = 7;
    private bool hasDateStatistics;
    private global::orc.proto.DateStatistics dateStatistics_;
    public bool HasDateStatistics {
      get { return hasDateStatistics; }
    }
    public global::orc.proto.DateStatistics DateStatistics {
      get { return dateStatistics_ ?? global::orc.proto.DateStatistics.DefaultInstance; }
    }
    
    public const int BinaryStatisticsFieldNumber = 8;
    private bool hasBinaryStatistics;
    private global::orc.proto.BinaryStatistics binaryStatistics_;
    public bool HasBinaryStatistics {
      get { return hasBinaryStatistics; }
    }
    public global::orc.proto.BinaryStatistics BinaryStatistics {
      get { return binaryStatistics_ ?? global::orc.proto.BinaryStatistics.DefaultInstance; }
    }
    
    public const int TimestampStatisticsFieldNumber = 9;
    private bool hasTimestampStatistics;
    private global::orc.proto.TimestampStatistics timestampStatistics_;
    public bool HasTimestampStatistics {
      get { return hasTimestampStatistics; }
    }
    public global::orc.proto.TimestampStatistics TimestampStatistics {
      get { return timestampStatistics_ ?? global::orc.proto.TimestampStatistics.DefaultInstance; }
    }
    
    public const int HasNullFieldNumber = 10;
    private bool hasHasNull;
    private bool hasNull_;
    public bool HasHasNull {
      get { return hasHasNull; }
    }
    public bool HasNull {
      get { return hasNull_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _columnStatisticsFieldNames;
      if (hasNumberOfValues) {
        output.WriteUInt64(1, field_names[7], NumberOfValues);
      }
      if (hasIntStatistics) {
        output.WriteMessage(2, field_names[6], IntStatistics);
      }
      if (hasDoubleStatistics) {
        output.WriteMessage(3, field_names[4], DoubleStatistics);
      }
      if (hasStringStatistics) {
        output.WriteMessage(4, field_names[8], StringStatistics);
      }
      if (hasBucketStatistics) {
        output.WriteMessage(5, field_names[1], BucketStatistics);
      }
      if (hasDecimalStatistics) {
        output.WriteMessage(6, field_names[3], DecimalStatistics);
      }
      if (hasDateStatistics) {
        output.WriteMessage(7, field_names[2], DateStatistics);
      }
      if (hasBinaryStatistics) {
        output.WriteMessage(8, field_names[0], BinaryStatistics);
      }
      if (hasTimestampStatistics) {
        output.WriteMessage(9, field_names[9], TimestampStatistics);
      }
      if (hasHasNull) {
        output.WriteBool(10, field_names[5], HasNull);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNumberOfValues) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, NumberOfValues);
      }
      if (hasIntStatistics) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, IntStatistics);
      }
      if (hasDoubleStatistics) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, DoubleStatistics);
      }
      if (hasStringStatistics) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, StringStatistics);
      }
      if (hasBucketStatistics) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, BucketStatistics);
      }
      if (hasDecimalStatistics) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, DecimalStatistics);
      }
      if (hasDateStatistics) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, DateStatistics);
      }
      if (hasBinaryStatistics) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, BinaryStatistics);
      }
      if (hasTimestampStatistics) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, TimestampStatistics);
      }
      if (hasHasNull) {
        size += pb::CodedOutputStream.ComputeBoolSize(10, HasNull);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ColumnStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ColumnStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ColumnStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ColumnStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ColumnStatistics MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ColumnStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ColumnStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ColumnStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ColumnStatistics result;
      
      private ColumnStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          ColumnStatistics original = result;
          result = new ColumnStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ColumnStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.ColumnStatistics.Descriptor; }
      }
      
      public override ColumnStatistics DefaultInstanceForType {
        get { return global::orc.proto.ColumnStatistics.DefaultInstance; }
      }
      
      public override ColumnStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ColumnStatistics) {
          return MergeFrom((ColumnStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ColumnStatistics other) {
        if (other == global::orc.proto.ColumnStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNumberOfValues) {
          NumberOfValues = other.NumberOfValues;
        }
        if (other.HasIntStatistics) {
          MergeIntStatistics(other.IntStatistics);
        }
        if (other.HasDoubleStatistics) {
          MergeDoubleStatistics(other.DoubleStatistics);
        }
        if (other.HasStringStatistics) {
          MergeStringStatistics(other.StringStatistics);
        }
        if (other.HasBucketStatistics) {
          MergeBucketStatistics(other.BucketStatistics);
        }
        if (other.HasDecimalStatistics) {
          MergeDecimalStatistics(other.DecimalStatistics);
        }
        if (other.HasDateStatistics) {
          MergeDateStatistics(other.DateStatistics);
        }
        if (other.HasBinaryStatistics) {
          MergeBinaryStatistics(other.BinaryStatistics);
        }
        if (other.HasTimestampStatistics) {
          MergeTimestampStatistics(other.TimestampStatistics);
        }
        if (other.HasHasNull) {
          HasNull = other.HasNull;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNumberOfValues = input.ReadUInt64(ref result.numberOfValues_);
              break;
            }
            case 18: {
              global::orc.proto.IntegerStatistics.Builder subBuilder = global::orc.proto.IntegerStatistics.CreateBuilder();
              if (result.hasIntStatistics) {
                subBuilder.MergeFrom(IntStatistics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              IntStatistics = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::orc.proto.DoubleStatistics.Builder subBuilder = global::orc.proto.DoubleStatistics.CreateBuilder();
              if (result.hasDoubleStatistics) {
                subBuilder.MergeFrom(DoubleStatistics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DoubleStatistics = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::orc.proto.StringStatistics.Builder subBuilder = global::orc.proto.StringStatistics.CreateBuilder();
              if (result.hasStringStatistics) {
                subBuilder.MergeFrom(StringStatistics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StringStatistics = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::orc.proto.BucketStatistics.Builder subBuilder = global::orc.proto.BucketStatistics.CreateBuilder();
              if (result.hasBucketStatistics) {
                subBuilder.MergeFrom(BucketStatistics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BucketStatistics = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::orc.proto.DecimalStatistics.Builder subBuilder = global::orc.proto.DecimalStatistics.CreateBuilder();
              if (result.hasDecimalStatistics) {
                subBuilder.MergeFrom(DecimalStatistics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DecimalStatistics = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::orc.proto.DateStatistics.Builder subBuilder = global::orc.proto.DateStatistics.CreateBuilder();
              if (result.hasDateStatistics) {
                subBuilder.MergeFrom(DateStatistics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DateStatistics = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::orc.proto.BinaryStatistics.Builder subBuilder = global::orc.proto.BinaryStatistics.CreateBuilder();
              if (result.hasBinaryStatistics) {
                subBuilder.MergeFrom(BinaryStatistics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BinaryStatistics = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::orc.proto.TimestampStatistics.Builder subBuilder = global::orc.proto.TimestampStatistics.CreateBuilder();
              if (result.hasTimestampStatistics) {
                subBuilder.MergeFrom(TimestampStatistics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TimestampStatistics = subBuilder.BuildPartial();
              break;
            }
            case 80: {
              result.hasHasNull = input.ReadBool(ref result.hasNull_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNumberOfValues {
        get { return result.hasNumberOfValues; }
      }
      [global::System.CLSCompliant(false)]
      public ulong NumberOfValues {
        get { return result.NumberOfValues; }
        set { SetNumberOfValues(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetNumberOfValues(ulong value) {
        PrepareBuilder();
        result.hasNumberOfValues = true;
        result.numberOfValues_ = value;
        return this;
      }
      public Builder ClearNumberOfValues() {
        PrepareBuilder();
        result.hasNumberOfValues = false;
        result.numberOfValues_ = 0UL;
        return this;
      }
      
      public bool HasIntStatistics {
       get { return result.hasIntStatistics; }
      }
      public global::orc.proto.IntegerStatistics IntStatistics {
        get { return result.IntStatistics; }
        set { SetIntStatistics(value); }
      }
      public Builder SetIntStatistics(global::orc.proto.IntegerStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIntStatistics = true;
        result.intStatistics_ = value;
        return this;
      }
      public Builder SetIntStatistics(global::orc.proto.IntegerStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIntStatistics = true;
        result.intStatistics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIntStatistics(global::orc.proto.IntegerStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIntStatistics &&
            result.intStatistics_ != global::orc.proto.IntegerStatistics.DefaultInstance) {
            result.intStatistics_ = global::orc.proto.IntegerStatistics.CreateBuilder(result.intStatistics_).MergeFrom(value).BuildPartial();
        } else {
          result.intStatistics_ = value;
        }
        result.hasIntStatistics = true;
        return this;
      }
      public Builder ClearIntStatistics() {
        PrepareBuilder();
        result.hasIntStatistics = false;
        result.intStatistics_ = null;
        return this;
      }
      
      public bool HasDoubleStatistics {
       get { return result.hasDoubleStatistics; }
      }
      public global::orc.proto.DoubleStatistics DoubleStatistics {
        get { return result.DoubleStatistics; }
        set { SetDoubleStatistics(value); }
      }
      public Builder SetDoubleStatistics(global::orc.proto.DoubleStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDoubleStatistics = true;
        result.doubleStatistics_ = value;
        return this;
      }
      public Builder SetDoubleStatistics(global::orc.proto.DoubleStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDoubleStatistics = true;
        result.doubleStatistics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDoubleStatistics(global::orc.proto.DoubleStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDoubleStatistics &&
            result.doubleStatistics_ != global::orc.proto.DoubleStatistics.DefaultInstance) {
            result.doubleStatistics_ = global::orc.proto.DoubleStatistics.CreateBuilder(result.doubleStatistics_).MergeFrom(value).BuildPartial();
        } else {
          result.doubleStatistics_ = value;
        }
        result.hasDoubleStatistics = true;
        return this;
      }
      public Builder ClearDoubleStatistics() {
        PrepareBuilder();
        result.hasDoubleStatistics = false;
        result.doubleStatistics_ = null;
        return this;
      }
      
      public bool HasStringStatistics {
       get { return result.hasStringStatistics; }
      }
      public global::orc.proto.StringStatistics StringStatistics {
        get { return result.StringStatistics; }
        set { SetStringStatistics(value); }
      }
      public Builder SetStringStatistics(global::orc.proto.StringStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStringStatistics = true;
        result.stringStatistics_ = value;
        return this;
      }
      public Builder SetStringStatistics(global::orc.proto.StringStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStringStatistics = true;
        result.stringStatistics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStringStatistics(global::orc.proto.StringStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStringStatistics &&
            result.stringStatistics_ != global::orc.proto.StringStatistics.DefaultInstance) {
            result.stringStatistics_ = global::orc.proto.StringStatistics.CreateBuilder(result.stringStatistics_).MergeFrom(value).BuildPartial();
        } else {
          result.stringStatistics_ = value;
        }
        result.hasStringStatistics = true;
        return this;
      }
      public Builder ClearStringStatistics() {
        PrepareBuilder();
        result.hasStringStatistics = false;
        result.stringStatistics_ = null;
        return this;
      }
      
      public bool HasBucketStatistics {
       get { return result.hasBucketStatistics; }
      }
      public global::orc.proto.BucketStatistics BucketStatistics {
        get { return result.BucketStatistics; }
        set { SetBucketStatistics(value); }
      }
      public Builder SetBucketStatistics(global::orc.proto.BucketStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBucketStatistics = true;
        result.bucketStatistics_ = value;
        return this;
      }
      public Builder SetBucketStatistics(global::orc.proto.BucketStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBucketStatistics = true;
        result.bucketStatistics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBucketStatistics(global::orc.proto.BucketStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBucketStatistics &&
            result.bucketStatistics_ != global::orc.proto.BucketStatistics.DefaultInstance) {
            result.bucketStatistics_ = global::orc.proto.BucketStatistics.CreateBuilder(result.bucketStatistics_).MergeFrom(value).BuildPartial();
        } else {
          result.bucketStatistics_ = value;
        }
        result.hasBucketStatistics = true;
        return this;
      }
      public Builder ClearBucketStatistics() {
        PrepareBuilder();
        result.hasBucketStatistics = false;
        result.bucketStatistics_ = null;
        return this;
      }
      
      public bool HasDecimalStatistics {
       get { return result.hasDecimalStatistics; }
      }
      public global::orc.proto.DecimalStatistics DecimalStatistics {
        get { return result.DecimalStatistics; }
        set { SetDecimalStatistics(value); }
      }
      public Builder SetDecimalStatistics(global::orc.proto.DecimalStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDecimalStatistics = true;
        result.decimalStatistics_ = value;
        return this;
      }
      public Builder SetDecimalStatistics(global::orc.proto.DecimalStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDecimalStatistics = true;
        result.decimalStatistics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDecimalStatistics(global::orc.proto.DecimalStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDecimalStatistics &&
            result.decimalStatistics_ != global::orc.proto.DecimalStatistics.DefaultInstance) {
            result.decimalStatistics_ = global::orc.proto.DecimalStatistics.CreateBuilder(result.decimalStatistics_).MergeFrom(value).BuildPartial();
        } else {
          result.decimalStatistics_ = value;
        }
        result.hasDecimalStatistics = true;
        return this;
      }
      public Builder ClearDecimalStatistics() {
        PrepareBuilder();
        result.hasDecimalStatistics = false;
        result.decimalStatistics_ = null;
        return this;
      }
      
      public bool HasDateStatistics {
       get { return result.hasDateStatistics; }
      }
      public global::orc.proto.DateStatistics DateStatistics {
        get { return result.DateStatistics; }
        set { SetDateStatistics(value); }
      }
      public Builder SetDateStatistics(global::orc.proto.DateStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDateStatistics = true;
        result.dateStatistics_ = value;
        return this;
      }
      public Builder SetDateStatistics(global::orc.proto.DateStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDateStatistics = true;
        result.dateStatistics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDateStatistics(global::orc.proto.DateStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDateStatistics &&
            result.dateStatistics_ != global::orc.proto.DateStatistics.DefaultInstance) {
            result.dateStatistics_ = global::orc.proto.DateStatistics.CreateBuilder(result.dateStatistics_).MergeFrom(value).BuildPartial();
        } else {
          result.dateStatistics_ = value;
        }
        result.hasDateStatistics = true;
        return this;
      }
      public Builder ClearDateStatistics() {
        PrepareBuilder();
        result.hasDateStatistics = false;
        result.dateStatistics_ = null;
        return this;
      }
      
      public bool HasBinaryStatistics {
       get { return result.hasBinaryStatistics; }
      }
      public global::orc.proto.BinaryStatistics BinaryStatistics {
        get { return result.BinaryStatistics; }
        set { SetBinaryStatistics(value); }
      }
      public Builder SetBinaryStatistics(global::orc.proto.BinaryStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBinaryStatistics = true;
        result.binaryStatistics_ = value;
        return this;
      }
      public Builder SetBinaryStatistics(global::orc.proto.BinaryStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBinaryStatistics = true;
        result.binaryStatistics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBinaryStatistics(global::orc.proto.BinaryStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBinaryStatistics &&
            result.binaryStatistics_ != global::orc.proto.BinaryStatistics.DefaultInstance) {
            result.binaryStatistics_ = global::orc.proto.BinaryStatistics.CreateBuilder(result.binaryStatistics_).MergeFrom(value).BuildPartial();
        } else {
          result.binaryStatistics_ = value;
        }
        result.hasBinaryStatistics = true;
        return this;
      }
      public Builder ClearBinaryStatistics() {
        PrepareBuilder();
        result.hasBinaryStatistics = false;
        result.binaryStatistics_ = null;
        return this;
      }
      
      public bool HasTimestampStatistics {
       get { return result.hasTimestampStatistics; }
      }
      public global::orc.proto.TimestampStatistics TimestampStatistics {
        get { return result.TimestampStatistics; }
        set { SetTimestampStatistics(value); }
      }
      public Builder SetTimestampStatistics(global::orc.proto.TimestampStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimestampStatistics = true;
        result.timestampStatistics_ = value;
        return this;
      }
      public Builder SetTimestampStatistics(global::orc.proto.TimestampStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTimestampStatistics = true;
        result.timestampStatistics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTimestampStatistics(global::orc.proto.TimestampStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTimestampStatistics &&
            result.timestampStatistics_ != global::orc.proto.TimestampStatistics.DefaultInstance) {
            result.timestampStatistics_ = global::orc.proto.TimestampStatistics.CreateBuilder(result.timestampStatistics_).MergeFrom(value).BuildPartial();
        } else {
          result.timestampStatistics_ = value;
        }
        result.hasTimestampStatistics = true;
        return this;
      }
      public Builder ClearTimestampStatistics() {
        PrepareBuilder();
        result.hasTimestampStatistics = false;
        result.timestampStatistics_ = null;
        return this;
      }
      
      public bool HasHasNull {
        get { return result.hasHasNull; }
      }
      public bool HasNull {
        get { return result.HasNull; }
        set { SetHasNull(value); }
      }
      public Builder SetHasNull(bool value) {
        PrepareBuilder();
        result.hasHasNull = true;
        result.hasNull_ = value;
        return this;
      }
      public Builder ClearHasNull() {
        PrepareBuilder();
        result.hasHasNull = false;
        result.hasNull_ = false;
        return this;
      }
    }
    static ColumnStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RowIndexEntry : pb::GeneratedMessage<RowIndexEntry, RowIndexEntry.Builder> {
    private RowIndexEntry() { }
    private static readonly RowIndexEntry defaultInstance = new RowIndexEntry().MakeReadOnly();
    private static readonly string[] _rowIndexEntryFieldNames = new string[] { "positions", "statistics" };
    private static readonly uint[] _rowIndexEntryFieldTags = new uint[] { 10, 18 };
    public static RowIndexEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RowIndexEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RowIndexEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_RowIndexEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RowIndexEntry, RowIndexEntry.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_RowIndexEntry__FieldAccessorTable; }
    }
    
    public const int PositionsFieldNumber = 1;
    private int positionsMemoizedSerializedSize;
    private pbc::PopsicleList<ulong> positions_ = new pbc::PopsicleList<ulong>();
    [global::System.CLSCompliant(false)]
    public scg::IList<ulong> PositionsList {
      get { return pbc::Lists.AsReadOnly(positions_); }
    }
    public int PositionsCount {
      get { return positions_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetPositions(int index) {
      return positions_[index];
    }
    
    public const int StatisticsFieldNumber = 2;
    private bool hasStatistics;
    private global::orc.proto.ColumnStatistics statistics_;
    public bool HasStatistics {
      get { return hasStatistics; }
    }
    public global::orc.proto.ColumnStatistics Statistics {
      get { return statistics_ ?? global::orc.proto.ColumnStatistics.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rowIndexEntryFieldNames;
      if (positions_.Count > 0) {
        output.WritePackedUInt64Array(1, field_names[0], positionsMemoizedSerializedSize, positions_);
      }
      if (hasStatistics) {
        output.WriteMessage(2, field_names[1], Statistics);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (ulong element in PositionsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
        }
        size += dataSize;
        if (positions_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        positionsMemoizedSerializedSize = dataSize;
      }
      if (hasStatistics) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Statistics);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RowIndexEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowIndexEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowIndexEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowIndexEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowIndexEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowIndexEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RowIndexEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RowIndexEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RowIndexEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowIndexEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RowIndexEntry MakeReadOnly() {
      positions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RowIndexEntry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RowIndexEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RowIndexEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RowIndexEntry result;
      
      private RowIndexEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          RowIndexEntry original = result;
          result = new RowIndexEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RowIndexEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.RowIndexEntry.Descriptor; }
      }
      
      public override RowIndexEntry DefaultInstanceForType {
        get { return global::orc.proto.RowIndexEntry.DefaultInstance; }
      }
      
      public override RowIndexEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RowIndexEntry) {
          return MergeFrom((RowIndexEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RowIndexEntry other) {
        if (other == global::orc.proto.RowIndexEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.positions_.Count != 0) {
          result.positions_.Add(other.positions_);
        }
        if (other.HasStatistics) {
          MergeStatistics(other.Statistics);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowIndexEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowIndexEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadUInt64Array(tag, field_name, result.positions_);
              break;
            }
            case 18: {
              global::orc.proto.ColumnStatistics.Builder subBuilder = global::orc.proto.ColumnStatistics.CreateBuilder();
              if (result.hasStatistics) {
                subBuilder.MergeFrom(Statistics);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Statistics = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<ulong> PositionsList {
        get { return PrepareBuilder().positions_; }
      }
      public int PositionsCount {
        get { return result.PositionsCount; }
      }
      [global::System.CLSCompliant(false)]
      public ulong GetPositions(int index) {
        return result.GetPositions(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPositions(int index, ulong value) {
        PrepareBuilder();
        result.positions_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddPositions(ulong value) {
        PrepareBuilder();
        result.positions_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangePositions(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.positions_.Add(values);
        return this;
      }
      public Builder ClearPositions() {
        PrepareBuilder();
        result.positions_.Clear();
        return this;
      }
      
      public bool HasStatistics {
       get { return result.hasStatistics; }
      }
      public global::orc.proto.ColumnStatistics Statistics {
        get { return result.Statistics; }
        set { SetStatistics(value); }
      }
      public Builder SetStatistics(global::orc.proto.ColumnStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStatistics = true;
        result.statistics_ = value;
        return this;
      }
      public Builder SetStatistics(global::orc.proto.ColumnStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStatistics = true;
        result.statistics_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStatistics(global::orc.proto.ColumnStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStatistics &&
            result.statistics_ != global::orc.proto.ColumnStatistics.DefaultInstance) {
            result.statistics_ = global::orc.proto.ColumnStatistics.CreateBuilder(result.statistics_).MergeFrom(value).BuildPartial();
        } else {
          result.statistics_ = value;
        }
        result.hasStatistics = true;
        return this;
      }
      public Builder ClearStatistics() {
        PrepareBuilder();
        result.hasStatistics = false;
        result.statistics_ = null;
        return this;
      }
    }
    static RowIndexEntry() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RowIndex : pb::GeneratedMessage<RowIndex, RowIndex.Builder> {
    private RowIndex() { }
    private static readonly RowIndex defaultInstance = new RowIndex().MakeReadOnly();
    private static readonly string[] _rowIndexFieldNames = new string[] { "entry" };
    private static readonly uint[] _rowIndexFieldTags = new uint[] { 10 };
    public static RowIndex DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RowIndex DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RowIndex ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_RowIndex__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RowIndex, RowIndex.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_RowIndex__FieldAccessorTable; }
    }
    
    public const int EntryFieldNumber = 1;
    private pbc::PopsicleList<global::orc.proto.RowIndexEntry> entry_ = new pbc::PopsicleList<global::orc.proto.RowIndexEntry>();
    public scg::IList<global::orc.proto.RowIndexEntry> EntryList {
      get { return entry_; }
    }
    public int EntryCount {
      get { return entry_.Count; }
    }
    public global::orc.proto.RowIndexEntry GetEntry(int index) {
      return entry_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rowIndexFieldNames;
      if (entry_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], entry_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::orc.proto.RowIndexEntry element in EntryList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RowIndex ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowIndex ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowIndex ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowIndex ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowIndex ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowIndex ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RowIndex ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RowIndex ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RowIndex ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowIndex ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RowIndex MakeReadOnly() {
      entry_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RowIndex prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RowIndex, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RowIndex cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RowIndex result;
      
      private RowIndex PrepareBuilder() {
        if (resultIsReadOnly) {
          RowIndex original = result;
          result = new RowIndex();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RowIndex MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.RowIndex.Descriptor; }
      }
      
      public override RowIndex DefaultInstanceForType {
        get { return global::orc.proto.RowIndex.DefaultInstance; }
      }
      
      public override RowIndex BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RowIndex) {
          return MergeFrom((RowIndex) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RowIndex other) {
        if (other == global::orc.proto.RowIndex.DefaultInstance) return this;
        PrepareBuilder();
        if (other.entry_.Count != 0) {
          result.entry_.Add(other.entry_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowIndexFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowIndexFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.entry_, global::orc.proto.RowIndexEntry.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::orc.proto.RowIndexEntry> EntryList {
        get { return PrepareBuilder().entry_; }
      }
      public int EntryCount {
        get { return result.EntryCount; }
      }
      public global::orc.proto.RowIndexEntry GetEntry(int index) {
        return result.GetEntry(index);
      }
      public Builder SetEntry(int index, global::orc.proto.RowIndexEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entry_[index] = value;
        return this;
      }
      public Builder SetEntry(int index, global::orc.proto.RowIndexEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entry_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntry(global::orc.proto.RowIndexEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entry_.Add(value);
        return this;
      }
      public Builder AddEntry(global::orc.proto.RowIndexEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entry_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntry(scg::IEnumerable<global::orc.proto.RowIndexEntry> values) {
        PrepareBuilder();
        result.entry_.Add(values);
        return this;
      }
      public Builder ClearEntry() {
        PrepareBuilder();
        result.entry_.Clear();
        return this;
      }
    }
    static RowIndex() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BloomFilter : pb::GeneratedMessage<BloomFilter, BloomFilter.Builder> {
    private BloomFilter() { }
    private static readonly BloomFilter defaultInstance = new BloomFilter().MakeReadOnly();
    private static readonly string[] _bloomFilterFieldNames = new string[] { "bitset", "numHashFunctions" };
    private static readonly uint[] _bloomFilterFieldTags = new uint[] { 17, 8 };
    public static BloomFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BloomFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BloomFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_BloomFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BloomFilter, BloomFilter.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_BloomFilter__FieldAccessorTable; }
    }
    
    public const int NumHashFunctionsFieldNumber = 1;
    private bool hasNumHashFunctions;
    private uint numHashFunctions_;
    public bool HasNumHashFunctions {
      get { return hasNumHashFunctions; }
    }
    [global::System.CLSCompliant(false)]
    public uint NumHashFunctions {
      get { return numHashFunctions_; }
    }
    
    public const int BitsetFieldNumber = 2;
    private pbc::PopsicleList<ulong> bitset_ = new pbc::PopsicleList<ulong>();
    [global::System.CLSCompliant(false)]
    public scg::IList<ulong> BitsetList {
      get { return pbc::Lists.AsReadOnly(bitset_); }
    }
    public int BitsetCount {
      get { return bitset_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetBitset(int index) {
      return bitset_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _bloomFilterFieldNames;
      if (hasNumHashFunctions) {
        output.WriteUInt32(1, field_names[1], NumHashFunctions);
      }
      if (bitset_.Count > 0) {
        output.WriteFixed64Array(2, field_names[0], bitset_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNumHashFunctions) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, NumHashFunctions);
      }
      {
        int dataSize = 0;
        dataSize = 8 * bitset_.Count;
        size += dataSize;
        size += 1 * bitset_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BloomFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BloomFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BloomFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BloomFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BloomFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BloomFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BloomFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BloomFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BloomFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BloomFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BloomFilter MakeReadOnly() {
      bitset_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BloomFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BloomFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BloomFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BloomFilter result;
      
      private BloomFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          BloomFilter original = result;
          result = new BloomFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BloomFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.BloomFilter.Descriptor; }
      }
      
      public override BloomFilter DefaultInstanceForType {
        get { return global::orc.proto.BloomFilter.DefaultInstance; }
      }
      
      public override BloomFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BloomFilter) {
          return MergeFrom((BloomFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BloomFilter other) {
        if (other == global::orc.proto.BloomFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNumHashFunctions) {
          NumHashFunctions = other.NumHashFunctions;
        }
        if (other.bitset_.Count != 0) {
          result.bitset_.Add(other.bitset_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bloomFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bloomFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNumHashFunctions = input.ReadUInt32(ref result.numHashFunctions_);
              break;
            }
            case 18:
            case 17: {
              input.ReadFixed64Array(tag, field_name, result.bitset_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNumHashFunctions {
        get { return result.hasNumHashFunctions; }
      }
      [global::System.CLSCompliant(false)]
      public uint NumHashFunctions {
        get { return result.NumHashFunctions; }
        set { SetNumHashFunctions(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetNumHashFunctions(uint value) {
        PrepareBuilder();
        result.hasNumHashFunctions = true;
        result.numHashFunctions_ = value;
        return this;
      }
      public Builder ClearNumHashFunctions() {
        PrepareBuilder();
        result.hasNumHashFunctions = false;
        result.numHashFunctions_ = 0;
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<ulong> BitsetList {
        get { return PrepareBuilder().bitset_; }
      }
      public int BitsetCount {
        get { return result.BitsetCount; }
      }
      [global::System.CLSCompliant(false)]
      public ulong GetBitset(int index) {
        return result.GetBitset(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBitset(int index, ulong value) {
        PrepareBuilder();
        result.bitset_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddBitset(ulong value) {
        PrepareBuilder();
        result.bitset_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeBitset(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.bitset_.Add(values);
        return this;
      }
      public Builder ClearBitset() {
        PrepareBuilder();
        result.bitset_.Clear();
        return this;
      }
    }
    static BloomFilter() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BloomFilterIndex : pb::GeneratedMessage<BloomFilterIndex, BloomFilterIndex.Builder> {
    private BloomFilterIndex() { }
    private static readonly BloomFilterIndex defaultInstance = new BloomFilterIndex().MakeReadOnly();
    private static readonly string[] _bloomFilterIndexFieldNames = new string[] { "bloomFilter" };
    private static readonly uint[] _bloomFilterIndexFieldTags = new uint[] { 10 };
    public static BloomFilterIndex DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BloomFilterIndex DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BloomFilterIndex ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_BloomFilterIndex__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BloomFilterIndex, BloomFilterIndex.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_BloomFilterIndex__FieldAccessorTable; }
    }
    
    public const int BloomFilterFieldNumber = 1;
    private pbc::PopsicleList<global::orc.proto.BloomFilter> bloomFilter_ = new pbc::PopsicleList<global::orc.proto.BloomFilter>();
    public scg::IList<global::orc.proto.BloomFilter> BloomFilterList {
      get { return bloomFilter_; }
    }
    public int BloomFilterCount {
      get { return bloomFilter_.Count; }
    }
    public global::orc.proto.BloomFilter GetBloomFilter(int index) {
      return bloomFilter_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _bloomFilterIndexFieldNames;
      if (bloomFilter_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], bloomFilter_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::orc.proto.BloomFilter element in BloomFilterList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BloomFilterIndex ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BloomFilterIndex ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BloomFilterIndex ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BloomFilterIndex ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BloomFilterIndex ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BloomFilterIndex ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BloomFilterIndex ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BloomFilterIndex ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BloomFilterIndex ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BloomFilterIndex ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BloomFilterIndex MakeReadOnly() {
      bloomFilter_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BloomFilterIndex prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BloomFilterIndex, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BloomFilterIndex cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BloomFilterIndex result;
      
      private BloomFilterIndex PrepareBuilder() {
        if (resultIsReadOnly) {
          BloomFilterIndex original = result;
          result = new BloomFilterIndex();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BloomFilterIndex MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.BloomFilterIndex.Descriptor; }
      }
      
      public override BloomFilterIndex DefaultInstanceForType {
        get { return global::orc.proto.BloomFilterIndex.DefaultInstance; }
      }
      
      public override BloomFilterIndex BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BloomFilterIndex) {
          return MergeFrom((BloomFilterIndex) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BloomFilterIndex other) {
        if (other == global::orc.proto.BloomFilterIndex.DefaultInstance) return this;
        PrepareBuilder();
        if (other.bloomFilter_.Count != 0) {
          result.bloomFilter_.Add(other.bloomFilter_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bloomFilterIndexFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bloomFilterIndexFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.bloomFilter_, global::orc.proto.BloomFilter.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::orc.proto.BloomFilter> BloomFilterList {
        get { return PrepareBuilder().bloomFilter_; }
      }
      public int BloomFilterCount {
        get { return result.BloomFilterCount; }
      }
      public global::orc.proto.BloomFilter GetBloomFilter(int index) {
        return result.GetBloomFilter(index);
      }
      public Builder SetBloomFilter(int index, global::orc.proto.BloomFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.bloomFilter_[index] = value;
        return this;
      }
      public Builder SetBloomFilter(int index, global::orc.proto.BloomFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.bloomFilter_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBloomFilter(global::orc.proto.BloomFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.bloomFilter_.Add(value);
        return this;
      }
      public Builder AddBloomFilter(global::orc.proto.BloomFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.bloomFilter_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBloomFilter(scg::IEnumerable<global::orc.proto.BloomFilter> values) {
        PrepareBuilder();
        result.bloomFilter_.Add(values);
        return this;
      }
      public Builder ClearBloomFilter() {
        PrepareBuilder();
        result.bloomFilter_.Clear();
        return this;
      }
    }
    static BloomFilterIndex() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Stream : pb::GeneratedMessage<Stream, Stream.Builder> {
    private Stream() { }
    private static readonly Stream defaultInstance = new Stream().MakeReadOnly();
    private static readonly string[] _streamFieldNames = new string[] { "column", "kind", "length" };
    private static readonly uint[] _streamFieldTags = new uint[] { 16, 8, 24 };
    public static Stream DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Stream DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Stream ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_Stream__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Stream, Stream.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_Stream__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Kind {
        PRESENT = 0,
        DATA = 1,
        LENGTH = 2,
        DICTIONARY_DATA = 3,
        DICTIONARY_COUNT = 4,
        SECONDARY = 5,
        ROW_INDEX = 6,
        BLOOM_FILTER = 7,
      }
      
    }
    #endregion
    
    public const int KindFieldNumber = 1;
    private bool hasKind;
    private global::orc.proto.Stream.Types.Kind kind_ = global::orc.proto.Stream.Types.Kind.PRESENT;
    public bool HasKind {
      get { return hasKind; }
    }
    public global::orc.proto.Stream.Types.Kind Kind {
      get { return kind_; }
    }
    
    public const int ColumnFieldNumber = 2;
    private bool hasColumn;
    private uint column_;
    public bool HasColumn {
      get { return hasColumn; }
    }
    [global::System.CLSCompliant(false)]
    public uint Column {
      get { return column_; }
    }
    
    public const int LengthFieldNumber = 3;
    private bool hasLength;
    private ulong length_;
    public bool HasLength {
      get { return hasLength; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Length {
      get { return length_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _streamFieldNames;
      if (hasKind) {
        output.WriteEnum(1, field_names[1], (int) Kind, Kind);
      }
      if (hasColumn) {
        output.WriteUInt32(2, field_names[0], Column);
      }
      if (hasLength) {
        output.WriteUInt64(3, field_names[2], Length);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKind) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Kind);
      }
      if (hasColumn) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Column);
      }
      if (hasLength) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, Length);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Stream ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Stream ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Stream ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Stream ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Stream ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Stream ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Stream ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Stream ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Stream ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Stream ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Stream MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Stream prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Stream, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Stream cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Stream result;
      
      private Stream PrepareBuilder() {
        if (resultIsReadOnly) {
          Stream original = result;
          result = new Stream();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Stream MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.Stream.Descriptor; }
      }
      
      public override Stream DefaultInstanceForType {
        get { return global::orc.proto.Stream.DefaultInstance; }
      }
      
      public override Stream BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Stream) {
          return MergeFrom((Stream) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Stream other) {
        if (other == global::orc.proto.Stream.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKind) {
          Kind = other.Kind;
        }
        if (other.HasColumn) {
          Column = other.Column;
        }
        if (other.HasLength) {
          Length = other.Length;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.kind_, out unknown)) {
                result.hasKind = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasColumn = input.ReadUInt32(ref result.column_);
              break;
            }
            case 24: {
              result.hasLength = input.ReadUInt64(ref result.length_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKind {
       get { return result.hasKind; }
      }
      public global::orc.proto.Stream.Types.Kind Kind {
        get { return result.Kind; }
        set { SetKind(value); }
      }
      public Builder SetKind(global::orc.proto.Stream.Types.Kind value) {
        PrepareBuilder();
        result.hasKind = true;
        result.kind_ = value;
        return this;
      }
      public Builder ClearKind() {
        PrepareBuilder();
        result.hasKind = false;
        result.kind_ = global::orc.proto.Stream.Types.Kind.PRESENT;
        return this;
      }
      
      public bool HasColumn {
        get { return result.hasColumn; }
      }
      [global::System.CLSCompliant(false)]
      public uint Column {
        get { return result.Column; }
        set { SetColumn(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetColumn(uint value) {
        PrepareBuilder();
        result.hasColumn = true;
        result.column_ = value;
        return this;
      }
      public Builder ClearColumn() {
        PrepareBuilder();
        result.hasColumn = false;
        result.column_ = 0;
        return this;
      }
      
      public bool HasLength {
        get { return result.hasLength; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Length {
        get { return result.Length; }
        set { SetLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetLength(ulong value) {
        PrepareBuilder();
        result.hasLength = true;
        result.length_ = value;
        return this;
      }
      public Builder ClearLength() {
        PrepareBuilder();
        result.hasLength = false;
        result.length_ = 0UL;
        return this;
      }
    }
    static Stream() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ColumnEncoding : pb::GeneratedMessage<ColumnEncoding, ColumnEncoding.Builder> {
    private ColumnEncoding() { }
    private static readonly ColumnEncoding defaultInstance = new ColumnEncoding().MakeReadOnly();
    private static readonly string[] _columnEncodingFieldNames = new string[] { "dictionarySize", "kind" };
    private static readonly uint[] _columnEncodingFieldTags = new uint[] { 16, 8 };
    public static ColumnEncoding DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ColumnEncoding DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ColumnEncoding ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_ColumnEncoding__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ColumnEncoding, ColumnEncoding.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_ColumnEncoding__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Kind {
        DIRECT = 0,
        DICTIONARY = 1,
        DIRECT_V2 = 2,
        DICTIONARY_V2 = 3,
      }
      
    }
    #endregion
    
    public const int KindFieldNumber = 1;
    private bool hasKind;
    private global::orc.proto.ColumnEncoding.Types.Kind kind_ = global::orc.proto.ColumnEncoding.Types.Kind.DIRECT;
    public bool HasKind {
      get { return hasKind; }
    }
    public global::orc.proto.ColumnEncoding.Types.Kind Kind {
      get { return kind_; }
    }
    
    public const int DictionarySizeFieldNumber = 2;
    private bool hasDictionarySize;
    private uint dictionarySize_;
    public bool HasDictionarySize {
      get { return hasDictionarySize; }
    }
    [global::System.CLSCompliant(false)]
    public uint DictionarySize {
      get { return dictionarySize_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _columnEncodingFieldNames;
      if (hasKind) {
        output.WriteEnum(1, field_names[1], (int) Kind, Kind);
      }
      if (hasDictionarySize) {
        output.WriteUInt32(2, field_names[0], DictionarySize);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKind) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Kind);
      }
      if (hasDictionarySize) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, DictionarySize);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ColumnEncoding ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnEncoding ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnEncoding ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnEncoding ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnEncoding ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnEncoding ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ColumnEncoding ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ColumnEncoding ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ColumnEncoding ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnEncoding ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ColumnEncoding MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ColumnEncoding prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ColumnEncoding, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ColumnEncoding cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ColumnEncoding result;
      
      private ColumnEncoding PrepareBuilder() {
        if (resultIsReadOnly) {
          ColumnEncoding original = result;
          result = new ColumnEncoding();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ColumnEncoding MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.ColumnEncoding.Descriptor; }
      }
      
      public override ColumnEncoding DefaultInstanceForType {
        get { return global::orc.proto.ColumnEncoding.DefaultInstance; }
      }
      
      public override ColumnEncoding BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ColumnEncoding) {
          return MergeFrom((ColumnEncoding) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ColumnEncoding other) {
        if (other == global::orc.proto.ColumnEncoding.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKind) {
          Kind = other.Kind;
        }
        if (other.HasDictionarySize) {
          DictionarySize = other.DictionarySize;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnEncodingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnEncodingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.kind_, out unknown)) {
                result.hasKind = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasDictionarySize = input.ReadUInt32(ref result.dictionarySize_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKind {
       get { return result.hasKind; }
      }
      public global::orc.proto.ColumnEncoding.Types.Kind Kind {
        get { return result.Kind; }
        set { SetKind(value); }
      }
      public Builder SetKind(global::orc.proto.ColumnEncoding.Types.Kind value) {
        PrepareBuilder();
        result.hasKind = true;
        result.kind_ = value;
        return this;
      }
      public Builder ClearKind() {
        PrepareBuilder();
        result.hasKind = false;
        result.kind_ = global::orc.proto.ColumnEncoding.Types.Kind.DIRECT;
        return this;
      }
      
      public bool HasDictionarySize {
        get { return result.hasDictionarySize; }
      }
      [global::System.CLSCompliant(false)]
      public uint DictionarySize {
        get { return result.DictionarySize; }
        set { SetDictionarySize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDictionarySize(uint value) {
        PrepareBuilder();
        result.hasDictionarySize = true;
        result.dictionarySize_ = value;
        return this;
      }
      public Builder ClearDictionarySize() {
        PrepareBuilder();
        result.hasDictionarySize = false;
        result.dictionarySize_ = 0;
        return this;
      }
    }
    static ColumnEncoding() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StripeFooter : pb::GeneratedMessage<StripeFooter, StripeFooter.Builder> {
    private StripeFooter() { }
    private static readonly StripeFooter defaultInstance = new StripeFooter().MakeReadOnly();
    private static readonly string[] _stripeFooterFieldNames = new string[] { "columns", "streams", "writerTimezone" };
    private static readonly uint[] _stripeFooterFieldTags = new uint[] { 18, 10, 26 };
    public static StripeFooter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StripeFooter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StripeFooter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_StripeFooter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StripeFooter, StripeFooter.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_StripeFooter__FieldAccessorTable; }
    }
    
    public const int StreamsFieldNumber = 1;
    private pbc::PopsicleList<global::orc.proto.Stream> streams_ = new pbc::PopsicleList<global::orc.proto.Stream>();
    public scg::IList<global::orc.proto.Stream> StreamsList {
      get { return streams_; }
    }
    public int StreamsCount {
      get { return streams_.Count; }
    }
    public global::orc.proto.Stream GetStreams(int index) {
      return streams_[index];
    }
    
    public const int ColumnsFieldNumber = 2;
    private pbc::PopsicleList<global::orc.proto.ColumnEncoding> columns_ = new pbc::PopsicleList<global::orc.proto.ColumnEncoding>();
    public scg::IList<global::orc.proto.ColumnEncoding> ColumnsList {
      get { return columns_; }
    }
    public int ColumnsCount {
      get { return columns_.Count; }
    }
    public global::orc.proto.ColumnEncoding GetColumns(int index) {
      return columns_[index];
    }
    
    public const int WriterTimezoneFieldNumber = 3;
    private bool hasWriterTimezone;
    private string writerTimezone_ = "";
    public bool HasWriterTimezone {
      get { return hasWriterTimezone; }
    }
    public string WriterTimezone {
      get { return writerTimezone_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _stripeFooterFieldNames;
      if (streams_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], streams_);
      }
      if (columns_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], columns_);
      }
      if (hasWriterTimezone) {
        output.WriteString(3, field_names[2], WriterTimezone);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::orc.proto.Stream element in StreamsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::orc.proto.ColumnEncoding element in ColumnsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasWriterTimezone) {
        size += pb::CodedOutputStream.ComputeStringSize(3, WriterTimezone);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StripeFooter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StripeFooter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StripeFooter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StripeFooter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StripeFooter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StripeFooter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StripeFooter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StripeFooter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StripeFooter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StripeFooter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StripeFooter MakeReadOnly() {
      streams_.MakeReadOnly();
      columns_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StripeFooter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StripeFooter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StripeFooter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StripeFooter result;
      
      private StripeFooter PrepareBuilder() {
        if (resultIsReadOnly) {
          StripeFooter original = result;
          result = new StripeFooter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StripeFooter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.StripeFooter.Descriptor; }
      }
      
      public override StripeFooter DefaultInstanceForType {
        get { return global::orc.proto.StripeFooter.DefaultInstance; }
      }
      
      public override StripeFooter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StripeFooter) {
          return MergeFrom((StripeFooter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StripeFooter other) {
        if (other == global::orc.proto.StripeFooter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.streams_.Count != 0) {
          result.streams_.Add(other.streams_);
        }
        if (other.columns_.Count != 0) {
          result.columns_.Add(other.columns_);
        }
        if (other.HasWriterTimezone) {
          WriterTimezone = other.WriterTimezone;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stripeFooterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stripeFooterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.streams_, global::orc.proto.Stream.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.columns_, global::orc.proto.ColumnEncoding.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              result.hasWriterTimezone = input.ReadString(ref result.writerTimezone_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::orc.proto.Stream> StreamsList {
        get { return PrepareBuilder().streams_; }
      }
      public int StreamsCount {
        get { return result.StreamsCount; }
      }
      public global::orc.proto.Stream GetStreams(int index) {
        return result.GetStreams(index);
      }
      public Builder SetStreams(int index, global::orc.proto.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streams_[index] = value;
        return this;
      }
      public Builder SetStreams(int index, global::orc.proto.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streams_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStreams(global::orc.proto.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streams_.Add(value);
        return this;
      }
      public Builder AddStreams(global::orc.proto.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streams_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStreams(scg::IEnumerable<global::orc.proto.Stream> values) {
        PrepareBuilder();
        result.streams_.Add(values);
        return this;
      }
      public Builder ClearStreams() {
        PrepareBuilder();
        result.streams_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::orc.proto.ColumnEncoding> ColumnsList {
        get { return PrepareBuilder().columns_; }
      }
      public int ColumnsCount {
        get { return result.ColumnsCount; }
      }
      public global::orc.proto.ColumnEncoding GetColumns(int index) {
        return result.GetColumns(index);
      }
      public Builder SetColumns(int index, global::orc.proto.ColumnEncoding value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columns_[index] = value;
        return this;
      }
      public Builder SetColumns(int index, global::orc.proto.ColumnEncoding.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.columns_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddColumns(global::orc.proto.ColumnEncoding value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columns_.Add(value);
        return this;
      }
      public Builder AddColumns(global::orc.proto.ColumnEncoding.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.columns_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeColumns(scg::IEnumerable<global::orc.proto.ColumnEncoding> values) {
        PrepareBuilder();
        result.columns_.Add(values);
        return this;
      }
      public Builder ClearColumns() {
        PrepareBuilder();
        result.columns_.Clear();
        return this;
      }
      
      public bool HasWriterTimezone {
        get { return result.hasWriterTimezone; }
      }
      public string WriterTimezone {
        get { return result.WriterTimezone; }
        set { SetWriterTimezone(value); }
      }
      public Builder SetWriterTimezone(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasWriterTimezone = true;
        result.writerTimezone_ = value;
        return this;
      }
      public Builder ClearWriterTimezone() {
        PrepareBuilder();
        result.hasWriterTimezone = false;
        result.writerTimezone_ = "";
        return this;
      }
    }
    static StripeFooter() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Type : pb::GeneratedMessage<Type, Type.Builder> {
    private Type() { }
    private static readonly Type defaultInstance = new Type().MakeReadOnly();
    private static readonly string[] _typeFieldNames = new string[] { "fieldNames", "kind", "maximumLength", "precision", "scale", "subtypes" };
    private static readonly uint[] _typeFieldTags = new uint[] { 26, 8, 32, 40, 48, 18 };
    public static Type DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Type DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Type ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_Type__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Type, Type.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_Type__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Kind {
        BOOLEAN = 0,
        BYTE = 1,
        SHORT = 2,
        INT = 3,
        LONG = 4,
        FLOAT = 5,
        DOUBLE = 6,
        STRING = 7,
        BINARY = 8,
        TIMESTAMP = 9,
        LIST = 10,
        MAP = 11,
        STRUCT = 12,
        UNION = 13,
        DECIMAL = 14,
        DATE = 15,
        VARCHAR = 16,
        CHAR = 17,
      }
      
    }
    #endregion
    
    public const int KindFieldNumber = 1;
    private bool hasKind;
    private global::orc.proto.Type.Types.Kind kind_ = global::orc.proto.Type.Types.Kind.BOOLEAN;
    public bool HasKind {
      get { return hasKind; }
    }
    public global::orc.proto.Type.Types.Kind Kind {
      get { return kind_; }
    }
    
    public const int SubtypesFieldNumber = 2;
    private int subtypesMemoizedSerializedSize;
    private pbc::PopsicleList<uint> subtypes_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> SubtypesList {
      get { return pbc::Lists.AsReadOnly(subtypes_); }
    }
    public int SubtypesCount {
      get { return subtypes_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetSubtypes(int index) {
      return subtypes_[index];
    }
    
    public const int FieldNamesFieldNumber = 3;
    private pbc::PopsicleList<string> fieldNames_ = new pbc::PopsicleList<string>();
    public scg::IList<string> FieldNamesList {
      get { return pbc::Lists.AsReadOnly(fieldNames_); }
    }
    public int FieldNamesCount {
      get { return fieldNames_.Count; }
    }
    public string GetFieldNames(int index) {
      return fieldNames_[index];
    }
    
    public const int MaximumLengthFieldNumber = 4;
    private bool hasMaximumLength;
    private uint maximumLength_;
    public bool HasMaximumLength {
      get { return hasMaximumLength; }
    }
    [global::System.CLSCompliant(false)]
    public uint MaximumLength {
      get { return maximumLength_; }
    }
    
    public const int PrecisionFieldNumber = 5;
    private bool hasPrecision;
    private uint precision_;
    public bool HasPrecision {
      get { return hasPrecision; }
    }
    [global::System.CLSCompliant(false)]
    public uint Precision {
      get { return precision_; }
    }
    
    public const int ScaleFieldNumber = 6;
    private bool hasScale;
    private uint scale_;
    public bool HasScale {
      get { return hasScale; }
    }
    [global::System.CLSCompliant(false)]
    public uint Scale {
      get { return scale_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _typeFieldNames;
      if (hasKind) {
        output.WriteEnum(1, field_names[1], (int) Kind, Kind);
      }
      if (subtypes_.Count > 0) {
        output.WritePackedUInt32Array(2, field_names[5], subtypesMemoizedSerializedSize, subtypes_);
      }
      if (fieldNames_.Count > 0) {
        output.WriteStringArray(3, field_names[0], fieldNames_);
      }
      if (hasMaximumLength) {
        output.WriteUInt32(4, field_names[2], MaximumLength);
      }
      if (hasPrecision) {
        output.WriteUInt32(5, field_names[3], Precision);
      }
      if (hasScale) {
        output.WriteUInt32(6, field_names[4], Scale);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKind) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Kind);
      }
      {
        int dataSize = 0;
        foreach (uint element in SubtypesList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        if (subtypes_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        subtypesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        foreach (string element in FieldNamesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * fieldNames_.Count;
      }
      if (hasMaximumLength) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, MaximumLength);
      }
      if (hasPrecision) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Precision);
      }
      if (hasScale) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, Scale);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Type ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Type ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Type ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Type ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Type ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Type ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Type ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Type ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Type ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Type ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Type MakeReadOnly() {
      subtypes_.MakeReadOnly();
      fieldNames_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Type prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Type, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Type cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Type result;
      
      private Type PrepareBuilder() {
        if (resultIsReadOnly) {
          Type original = result;
          result = new Type();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Type MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.Type.Descriptor; }
      }
      
      public override Type DefaultInstanceForType {
        get { return global::orc.proto.Type.DefaultInstance; }
      }
      
      public override Type BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Type) {
          return MergeFrom((Type) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Type other) {
        if (other == global::orc.proto.Type.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKind) {
          Kind = other.Kind;
        }
        if (other.subtypes_.Count != 0) {
          result.subtypes_.Add(other.subtypes_);
        }
        if (other.fieldNames_.Count != 0) {
          result.fieldNames_.Add(other.fieldNames_);
        }
        if (other.HasMaximumLength) {
          MaximumLength = other.MaximumLength;
        }
        if (other.HasPrecision) {
          Precision = other.Precision;
        }
        if (other.HasScale) {
          Scale = other.Scale;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_typeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _typeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.kind_, out unknown)) {
                result.hasKind = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.subtypes_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.fieldNames_);
              break;
            }
            case 32: {
              result.hasMaximumLength = input.ReadUInt32(ref result.maximumLength_);
              break;
            }
            case 40: {
              result.hasPrecision = input.ReadUInt32(ref result.precision_);
              break;
            }
            case 48: {
              result.hasScale = input.ReadUInt32(ref result.scale_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKind {
       get { return result.hasKind; }
      }
      public global::orc.proto.Type.Types.Kind Kind {
        get { return result.Kind; }
        set { SetKind(value); }
      }
      public Builder SetKind(global::orc.proto.Type.Types.Kind value) {
        PrepareBuilder();
        result.hasKind = true;
        result.kind_ = value;
        return this;
      }
      public Builder ClearKind() {
        PrepareBuilder();
        result.hasKind = false;
        result.kind_ = global::orc.proto.Type.Types.Kind.BOOLEAN;
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> SubtypesList {
        get { return PrepareBuilder().subtypes_; }
      }
      public int SubtypesCount {
        get { return result.SubtypesCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetSubtypes(int index) {
        return result.GetSubtypes(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSubtypes(int index, uint value) {
        PrepareBuilder();
        result.subtypes_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddSubtypes(uint value) {
        PrepareBuilder();
        result.subtypes_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeSubtypes(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.subtypes_.Add(values);
        return this;
      }
      public Builder ClearSubtypes() {
        PrepareBuilder();
        result.subtypes_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> FieldNamesList {
        get { return PrepareBuilder().fieldNames_; }
      }
      public int FieldNamesCount {
        get { return result.FieldNamesCount; }
      }
      public string GetFieldNames(int index) {
        return result.GetFieldNames(index);
      }
      public Builder SetFieldNames(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldNames_[index] = value;
        return this;
      }
      public Builder AddFieldNames(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldNames_.Add(value);
        return this;
      }
      public Builder AddRangeFieldNames(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.fieldNames_.Add(values);
        return this;
      }
      public Builder ClearFieldNames() {
        PrepareBuilder();
        result.fieldNames_.Clear();
        return this;
      }
      
      public bool HasMaximumLength {
        get { return result.hasMaximumLength; }
      }
      [global::System.CLSCompliant(false)]
      public uint MaximumLength {
        get { return result.MaximumLength; }
        set { SetMaximumLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMaximumLength(uint value) {
        PrepareBuilder();
        result.hasMaximumLength = true;
        result.maximumLength_ = value;
        return this;
      }
      public Builder ClearMaximumLength() {
        PrepareBuilder();
        result.hasMaximumLength = false;
        result.maximumLength_ = 0;
        return this;
      }
      
      public bool HasPrecision {
        get { return result.hasPrecision; }
      }
      [global::System.CLSCompliant(false)]
      public uint Precision {
        get { return result.Precision; }
        set { SetPrecision(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPrecision(uint value) {
        PrepareBuilder();
        result.hasPrecision = true;
        result.precision_ = value;
        return this;
      }
      public Builder ClearPrecision() {
        PrepareBuilder();
        result.hasPrecision = false;
        result.precision_ = 0;
        return this;
      }
      
      public bool HasScale {
        get { return result.hasScale; }
      }
      [global::System.CLSCompliant(false)]
      public uint Scale {
        get { return result.Scale; }
        set { SetScale(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetScale(uint value) {
        PrepareBuilder();
        result.hasScale = true;
        result.scale_ = value;
        return this;
      }
      public Builder ClearScale() {
        PrepareBuilder();
        result.hasScale = false;
        result.scale_ = 0;
        return this;
      }
    }
    static Type() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StripeInformation : pb::GeneratedMessage<StripeInformation, StripeInformation.Builder> {
    private StripeInformation() { }
    private static readonly StripeInformation defaultInstance = new StripeInformation().MakeReadOnly();
    private static readonly string[] _stripeInformationFieldNames = new string[] { "dataLength", "footerLength", "indexLength", "numberOfRows", "offset" };
    private static readonly uint[] _stripeInformationFieldTags = new uint[] { 24, 32, 16, 40, 8 };
    public static StripeInformation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StripeInformation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StripeInformation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_StripeInformation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StripeInformation, StripeInformation.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_StripeInformation__FieldAccessorTable; }
    }
    
    public const int OffsetFieldNumber = 1;
    private bool hasOffset;
    private ulong offset_;
    public bool HasOffset {
      get { return hasOffset; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Offset {
      get { return offset_; }
    }
    
    public const int IndexLengthFieldNumber = 2;
    private bool hasIndexLength;
    private ulong indexLength_;
    public bool HasIndexLength {
      get { return hasIndexLength; }
    }
    [global::System.CLSCompliant(false)]
    public ulong IndexLength {
      get { return indexLength_; }
    }
    
    public const int DataLengthFieldNumber = 3;
    private bool hasDataLength;
    private ulong dataLength_;
    public bool HasDataLength {
      get { return hasDataLength; }
    }
    [global::System.CLSCompliant(false)]
    public ulong DataLength {
      get { return dataLength_; }
    }
    
    public const int FooterLengthFieldNumber = 4;
    private bool hasFooterLength;
    private ulong footerLength_;
    public bool HasFooterLength {
      get { return hasFooterLength; }
    }
    [global::System.CLSCompliant(false)]
    public ulong FooterLength {
      get { return footerLength_; }
    }
    
    public const int NumberOfRowsFieldNumber = 5;
    private bool hasNumberOfRows;
    private ulong numberOfRows_;
    public bool HasNumberOfRows {
      get { return hasNumberOfRows; }
    }
    [global::System.CLSCompliant(false)]
    public ulong NumberOfRows {
      get { return numberOfRows_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _stripeInformationFieldNames;
      if (hasOffset) {
        output.WriteUInt64(1, field_names[4], Offset);
      }
      if (hasIndexLength) {
        output.WriteUInt64(2, field_names[2], IndexLength);
      }
      if (hasDataLength) {
        output.WriteUInt64(3, field_names[0], DataLength);
      }
      if (hasFooterLength) {
        output.WriteUInt64(4, field_names[1], FooterLength);
      }
      if (hasNumberOfRows) {
        output.WriteUInt64(5, field_names[3], NumberOfRows);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOffset) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, Offset);
      }
      if (hasIndexLength) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, IndexLength);
      }
      if (hasDataLength) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, DataLength);
      }
      if (hasFooterLength) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, FooterLength);
      }
      if (hasNumberOfRows) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, NumberOfRows);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StripeInformation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StripeInformation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StripeInformation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StripeInformation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StripeInformation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StripeInformation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StripeInformation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StripeInformation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StripeInformation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StripeInformation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StripeInformation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StripeInformation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StripeInformation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StripeInformation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StripeInformation result;
      
      private StripeInformation PrepareBuilder() {
        if (resultIsReadOnly) {
          StripeInformation original = result;
          result = new StripeInformation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StripeInformation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.StripeInformation.Descriptor; }
      }
      
      public override StripeInformation DefaultInstanceForType {
        get { return global::orc.proto.StripeInformation.DefaultInstance; }
      }
      
      public override StripeInformation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StripeInformation) {
          return MergeFrom((StripeInformation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StripeInformation other) {
        if (other == global::orc.proto.StripeInformation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOffset) {
          Offset = other.Offset;
        }
        if (other.HasIndexLength) {
          IndexLength = other.IndexLength;
        }
        if (other.HasDataLength) {
          DataLength = other.DataLength;
        }
        if (other.HasFooterLength) {
          FooterLength = other.FooterLength;
        }
        if (other.HasNumberOfRows) {
          NumberOfRows = other.NumberOfRows;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stripeInformationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stripeInformationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOffset = input.ReadUInt64(ref result.offset_);
              break;
            }
            case 16: {
              result.hasIndexLength = input.ReadUInt64(ref result.indexLength_);
              break;
            }
            case 24: {
              result.hasDataLength = input.ReadUInt64(ref result.dataLength_);
              break;
            }
            case 32: {
              result.hasFooterLength = input.ReadUInt64(ref result.footerLength_);
              break;
            }
            case 40: {
              result.hasNumberOfRows = input.ReadUInt64(ref result.numberOfRows_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffset {
        get { return result.hasOffset; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Offset {
        get { return result.Offset; }
        set { SetOffset(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOffset(ulong value) {
        PrepareBuilder();
        result.hasOffset = true;
        result.offset_ = value;
        return this;
      }
      public Builder ClearOffset() {
        PrepareBuilder();
        result.hasOffset = false;
        result.offset_ = 0UL;
        return this;
      }
      
      public bool HasIndexLength {
        get { return result.hasIndexLength; }
      }
      [global::System.CLSCompliant(false)]
      public ulong IndexLength {
        get { return result.IndexLength; }
        set { SetIndexLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIndexLength(ulong value) {
        PrepareBuilder();
        result.hasIndexLength = true;
        result.indexLength_ = value;
        return this;
      }
      public Builder ClearIndexLength() {
        PrepareBuilder();
        result.hasIndexLength = false;
        result.indexLength_ = 0UL;
        return this;
      }
      
      public bool HasDataLength {
        get { return result.hasDataLength; }
      }
      [global::System.CLSCompliant(false)]
      public ulong DataLength {
        get { return result.DataLength; }
        set { SetDataLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDataLength(ulong value) {
        PrepareBuilder();
        result.hasDataLength = true;
        result.dataLength_ = value;
        return this;
      }
      public Builder ClearDataLength() {
        PrepareBuilder();
        result.hasDataLength = false;
        result.dataLength_ = 0UL;
        return this;
      }
      
      public bool HasFooterLength {
        get { return result.hasFooterLength; }
      }
      [global::System.CLSCompliant(false)]
      public ulong FooterLength {
        get { return result.FooterLength; }
        set { SetFooterLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFooterLength(ulong value) {
        PrepareBuilder();
        result.hasFooterLength = true;
        result.footerLength_ = value;
        return this;
      }
      public Builder ClearFooterLength() {
        PrepareBuilder();
        result.hasFooterLength = false;
        result.footerLength_ = 0UL;
        return this;
      }
      
      public bool HasNumberOfRows {
        get { return result.hasNumberOfRows; }
      }
      [global::System.CLSCompliant(false)]
      public ulong NumberOfRows {
        get { return result.NumberOfRows; }
        set { SetNumberOfRows(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetNumberOfRows(ulong value) {
        PrepareBuilder();
        result.hasNumberOfRows = true;
        result.numberOfRows_ = value;
        return this;
      }
      public Builder ClearNumberOfRows() {
        PrepareBuilder();
        result.hasNumberOfRows = false;
        result.numberOfRows_ = 0UL;
        return this;
      }
    }
    static StripeInformation() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserMetadataItem : pb::GeneratedMessage<UserMetadataItem, UserMetadataItem.Builder> {
    private UserMetadataItem() { }
    private static readonly UserMetadataItem defaultInstance = new UserMetadataItem().MakeReadOnly();
    private static readonly string[] _userMetadataItemFieldNames = new string[] { "name", "value" };
    private static readonly uint[] _userMetadataItemFieldTags = new uint[] { 10, 18 };
    public static UserMetadataItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserMetadataItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserMetadataItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_UserMetadataItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserMetadataItem, UserMetadataItem.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_UserMetadataItem__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private pb::ByteString value_ = pb::ByteString.Empty;
    public bool HasValue {
      get { return hasValue; }
    }
    public pb::ByteString Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userMetadataItemFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasValue) {
        output.WriteBytes(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserMetadataItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMetadataItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMetadataItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMetadataItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMetadataItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMetadataItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserMetadataItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserMetadataItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserMetadataItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMetadataItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserMetadataItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserMetadataItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserMetadataItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserMetadataItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserMetadataItem result;
      
      private UserMetadataItem PrepareBuilder() {
        if (resultIsReadOnly) {
          UserMetadataItem original = result;
          result = new UserMetadataItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserMetadataItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.UserMetadataItem.Descriptor; }
      }
      
      public override UserMetadataItem DefaultInstanceForType {
        get { return global::orc.proto.UserMetadataItem.DefaultInstance; }
      }
      
      public override UserMetadataItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserMetadataItem) {
          return MergeFrom((UserMetadataItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserMetadataItem other) {
        if (other == global::orc.proto.UserMetadataItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userMetadataItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userMetadataItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadBytes(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public pb::ByteString Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = pb::ByteString.Empty;
        return this;
      }
    }
    static UserMetadataItem() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StripeStatistics : pb::GeneratedMessage<StripeStatistics, StripeStatistics.Builder> {
    private StripeStatistics() { }
    private static readonly StripeStatistics defaultInstance = new StripeStatistics().MakeReadOnly();
    private static readonly string[] _stripeStatisticsFieldNames = new string[] { "colStats" };
    private static readonly uint[] _stripeStatisticsFieldTags = new uint[] { 10 };
    public static StripeStatistics DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StripeStatistics DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StripeStatistics ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_StripeStatistics__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StripeStatistics, StripeStatistics.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_StripeStatistics__FieldAccessorTable; }
    }
    
    public const int ColStatsFieldNumber = 1;
    private pbc::PopsicleList<global::orc.proto.ColumnStatistics> colStats_ = new pbc::PopsicleList<global::orc.proto.ColumnStatistics>();
    public scg::IList<global::orc.proto.ColumnStatistics> ColStatsList {
      get { return colStats_; }
    }
    public int ColStatsCount {
      get { return colStats_.Count; }
    }
    public global::orc.proto.ColumnStatistics GetColStats(int index) {
      return colStats_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _stripeStatisticsFieldNames;
      if (colStats_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], colStats_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::orc.proto.ColumnStatistics element in ColStatsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StripeStatistics ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StripeStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StripeStatistics ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StripeStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StripeStatistics ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StripeStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StripeStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StripeStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StripeStatistics ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StripeStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StripeStatistics MakeReadOnly() {
      colStats_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StripeStatistics prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StripeStatistics, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StripeStatistics cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StripeStatistics result;
      
      private StripeStatistics PrepareBuilder() {
        if (resultIsReadOnly) {
          StripeStatistics original = result;
          result = new StripeStatistics();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StripeStatistics MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.StripeStatistics.Descriptor; }
      }
      
      public override StripeStatistics DefaultInstanceForType {
        get { return global::orc.proto.StripeStatistics.DefaultInstance; }
      }
      
      public override StripeStatistics BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StripeStatistics) {
          return MergeFrom((StripeStatistics) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StripeStatistics other) {
        if (other == global::orc.proto.StripeStatistics.DefaultInstance) return this;
        PrepareBuilder();
        if (other.colStats_.Count != 0) {
          result.colStats_.Add(other.colStats_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stripeStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stripeStatisticsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.colStats_, global::orc.proto.ColumnStatistics.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::orc.proto.ColumnStatistics> ColStatsList {
        get { return PrepareBuilder().colStats_; }
      }
      public int ColStatsCount {
        get { return result.ColStatsCount; }
      }
      public global::orc.proto.ColumnStatistics GetColStats(int index) {
        return result.GetColStats(index);
      }
      public Builder SetColStats(int index, global::orc.proto.ColumnStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.colStats_[index] = value;
        return this;
      }
      public Builder SetColStats(int index, global::orc.proto.ColumnStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.colStats_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddColStats(global::orc.proto.ColumnStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.colStats_.Add(value);
        return this;
      }
      public Builder AddColStats(global::orc.proto.ColumnStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.colStats_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeColStats(scg::IEnumerable<global::orc.proto.ColumnStatistics> values) {
        PrepareBuilder();
        result.colStats_.Add(values);
        return this;
      }
      public Builder ClearColStats() {
        PrepareBuilder();
        result.colStats_.Clear();
        return this;
      }
    }
    static StripeStatistics() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Metadata : pb::GeneratedMessage<Metadata, Metadata.Builder> {
    private Metadata() { }
    private static readonly Metadata defaultInstance = new Metadata().MakeReadOnly();
    private static readonly string[] _metadataFieldNames = new string[] { "stripeStats" };
    private static readonly uint[] _metadataFieldTags = new uint[] { 10 };
    public static Metadata DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Metadata DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Metadata ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_Metadata__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Metadata, Metadata.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_Metadata__FieldAccessorTable; }
    }
    
    public const int StripeStatsFieldNumber = 1;
    private pbc::PopsicleList<global::orc.proto.StripeStatistics> stripeStats_ = new pbc::PopsicleList<global::orc.proto.StripeStatistics>();
    public scg::IList<global::orc.proto.StripeStatistics> StripeStatsList {
      get { return stripeStats_; }
    }
    public int StripeStatsCount {
      get { return stripeStats_.Count; }
    }
    public global::orc.proto.StripeStatistics GetStripeStats(int index) {
      return stripeStats_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _metadataFieldNames;
      if (stripeStats_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], stripeStats_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::orc.proto.StripeStatistics element in StripeStatsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Metadata ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Metadata ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Metadata ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Metadata ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Metadata ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Metadata ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Metadata ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Metadata ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Metadata ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Metadata ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Metadata MakeReadOnly() {
      stripeStats_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Metadata prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Metadata, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Metadata cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Metadata result;
      
      private Metadata PrepareBuilder() {
        if (resultIsReadOnly) {
          Metadata original = result;
          result = new Metadata();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Metadata MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.Metadata.Descriptor; }
      }
      
      public override Metadata DefaultInstanceForType {
        get { return global::orc.proto.Metadata.DefaultInstance; }
      }
      
      public override Metadata BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Metadata) {
          return MergeFrom((Metadata) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Metadata other) {
        if (other == global::orc.proto.Metadata.DefaultInstance) return this;
        PrepareBuilder();
        if (other.stripeStats_.Count != 0) {
          result.stripeStats_.Add(other.stripeStats_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_metadataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _metadataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.stripeStats_, global::orc.proto.StripeStatistics.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::orc.proto.StripeStatistics> StripeStatsList {
        get { return PrepareBuilder().stripeStats_; }
      }
      public int StripeStatsCount {
        get { return result.StripeStatsCount; }
      }
      public global::orc.proto.StripeStatistics GetStripeStats(int index) {
        return result.GetStripeStats(index);
      }
      public Builder SetStripeStats(int index, global::orc.proto.StripeStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stripeStats_[index] = value;
        return this;
      }
      public Builder SetStripeStats(int index, global::orc.proto.StripeStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stripeStats_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStripeStats(global::orc.proto.StripeStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stripeStats_.Add(value);
        return this;
      }
      public Builder AddStripeStats(global::orc.proto.StripeStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stripeStats_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStripeStats(scg::IEnumerable<global::orc.proto.StripeStatistics> values) {
        PrepareBuilder();
        result.stripeStats_.Add(values);
        return this;
      }
      public Builder ClearStripeStats() {
        PrepareBuilder();
        result.stripeStats_.Clear();
        return this;
      }
    }
    static Metadata() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Footer : pb::GeneratedMessage<Footer, Footer.Builder> {
    private Footer() { }
    private static readonly Footer defaultInstance = new Footer().MakeReadOnly();
    private static readonly string[] _footerFieldNames = new string[] { "contentLength", "headerLength", "metadata", "numberOfRows", "rowIndexStride", "statistics", "stripes", "types" };
    private static readonly uint[] _footerFieldTags = new uint[] { 16, 8, 42, 48, 64, 58, 26, 34 };
    public static Footer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Footer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Footer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_Footer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Footer, Footer.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_Footer__FieldAccessorTable; }
    }
    
    public const int HeaderLengthFieldNumber = 1;
    private bool hasHeaderLength;
    private ulong headerLength_;
    public bool HasHeaderLength {
      get { return hasHeaderLength; }
    }
    [global::System.CLSCompliant(false)]
    public ulong HeaderLength {
      get { return headerLength_; }
    }
    
    public const int ContentLengthFieldNumber = 2;
    private bool hasContentLength;
    private ulong contentLength_;
    public bool HasContentLength {
      get { return hasContentLength; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ContentLength {
      get { return contentLength_; }
    }
    
    public const int StripesFieldNumber = 3;
    private pbc::PopsicleList<global::orc.proto.StripeInformation> stripes_ = new pbc::PopsicleList<global::orc.proto.StripeInformation>();
    public scg::IList<global::orc.proto.StripeInformation> StripesList {
      get { return stripes_; }
    }
    public int StripesCount {
      get { return stripes_.Count; }
    }
    public global::orc.proto.StripeInformation GetStripes(int index) {
      return stripes_[index];
    }
    
    public const int TypesFieldNumber = 4;
    private pbc::PopsicleList<global::orc.proto.Type> types_ = new pbc::PopsicleList<global::orc.proto.Type>();
    public scg::IList<global::orc.proto.Type> TypesList {
      get { return types_; }
    }
    public int TypesCount {
      get { return types_.Count; }
    }
    public global::orc.proto.Type GetTypes(int index) {
      return types_[index];
    }
    
    public const int MetadataFieldNumber = 5;
    private pbc::PopsicleList<global::orc.proto.UserMetadataItem> metadata_ = new pbc::PopsicleList<global::orc.proto.UserMetadataItem>();
    public scg::IList<global::orc.proto.UserMetadataItem> MetadataList {
      get { return metadata_; }
    }
    public int MetadataCount {
      get { return metadata_.Count; }
    }
    public global::orc.proto.UserMetadataItem GetMetadata(int index) {
      return metadata_[index];
    }
    
    public const int NumberOfRowsFieldNumber = 6;
    private bool hasNumberOfRows;
    private ulong numberOfRows_;
    public bool HasNumberOfRows {
      get { return hasNumberOfRows; }
    }
    [global::System.CLSCompliant(false)]
    public ulong NumberOfRows {
      get { return numberOfRows_; }
    }
    
    public const int StatisticsFieldNumber = 7;
    private pbc::PopsicleList<global::orc.proto.ColumnStatistics> statistics_ = new pbc::PopsicleList<global::orc.proto.ColumnStatistics>();
    public scg::IList<global::orc.proto.ColumnStatistics> StatisticsList {
      get { return statistics_; }
    }
    public int StatisticsCount {
      get { return statistics_.Count; }
    }
    public global::orc.proto.ColumnStatistics GetStatistics(int index) {
      return statistics_[index];
    }
    
    public const int RowIndexStrideFieldNumber = 8;
    private bool hasRowIndexStride;
    private uint rowIndexStride_;
    public bool HasRowIndexStride {
      get { return hasRowIndexStride; }
    }
    [global::System.CLSCompliant(false)]
    public uint RowIndexStride {
      get { return rowIndexStride_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _footerFieldNames;
      if (hasHeaderLength) {
        output.WriteUInt64(1, field_names[1], HeaderLength);
      }
      if (hasContentLength) {
        output.WriteUInt64(2, field_names[0], ContentLength);
      }
      if (stripes_.Count > 0) {
        output.WriteMessageArray(3, field_names[6], stripes_);
      }
      if (types_.Count > 0) {
        output.WriteMessageArray(4, field_names[7], types_);
      }
      if (metadata_.Count > 0) {
        output.WriteMessageArray(5, field_names[2], metadata_);
      }
      if (hasNumberOfRows) {
        output.WriteUInt64(6, field_names[3], NumberOfRows);
      }
      if (statistics_.Count > 0) {
        output.WriteMessageArray(7, field_names[5], statistics_);
      }
      if (hasRowIndexStride) {
        output.WriteUInt32(8, field_names[4], RowIndexStride);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasHeaderLength) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, HeaderLength);
      }
      if (hasContentLength) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, ContentLength);
      }
      foreach (global::orc.proto.StripeInformation element in StripesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::orc.proto.Type element in TypesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      foreach (global::orc.proto.UserMetadataItem element in MetadataList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      if (hasNumberOfRows) {
        size += pb::CodedOutputStream.ComputeUInt64Size(6, NumberOfRows);
      }
      foreach (global::orc.proto.ColumnStatistics element in StatisticsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, element);
      }
      if (hasRowIndexStride) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, RowIndexStride);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Footer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Footer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Footer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Footer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Footer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Footer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Footer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Footer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Footer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Footer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Footer MakeReadOnly() {
      stripes_.MakeReadOnly();
      types_.MakeReadOnly();
      metadata_.MakeReadOnly();
      statistics_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Footer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Footer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Footer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Footer result;
      
      private Footer PrepareBuilder() {
        if (resultIsReadOnly) {
          Footer original = result;
          result = new Footer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Footer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.Footer.Descriptor; }
      }
      
      public override Footer DefaultInstanceForType {
        get { return global::orc.proto.Footer.DefaultInstance; }
      }
      
      public override Footer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Footer) {
          return MergeFrom((Footer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Footer other) {
        if (other == global::orc.proto.Footer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHeaderLength) {
          HeaderLength = other.HeaderLength;
        }
        if (other.HasContentLength) {
          ContentLength = other.ContentLength;
        }
        if (other.stripes_.Count != 0) {
          result.stripes_.Add(other.stripes_);
        }
        if (other.types_.Count != 0) {
          result.types_.Add(other.types_);
        }
        if (other.metadata_.Count != 0) {
          result.metadata_.Add(other.metadata_);
        }
        if (other.HasNumberOfRows) {
          NumberOfRows = other.NumberOfRows;
        }
        if (other.statistics_.Count != 0) {
          result.statistics_.Add(other.statistics_);
        }
        if (other.HasRowIndexStride) {
          RowIndexStride = other.RowIndexStride;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_footerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _footerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasHeaderLength = input.ReadUInt64(ref result.headerLength_);
              break;
            }
            case 16: {
              result.hasContentLength = input.ReadUInt64(ref result.contentLength_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.stripes_, global::orc.proto.StripeInformation.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.types_, global::orc.proto.Type.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.metadata_, global::orc.proto.UserMetadataItem.DefaultInstance, extensionRegistry);
              break;
            }
            case 48: {
              result.hasNumberOfRows = input.ReadUInt64(ref result.numberOfRows_);
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.statistics_, global::orc.proto.ColumnStatistics.DefaultInstance, extensionRegistry);
              break;
            }
            case 64: {
              result.hasRowIndexStride = input.ReadUInt32(ref result.rowIndexStride_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHeaderLength {
        get { return result.hasHeaderLength; }
      }
      [global::System.CLSCompliant(false)]
      public ulong HeaderLength {
        get { return result.HeaderLength; }
        set { SetHeaderLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetHeaderLength(ulong value) {
        PrepareBuilder();
        result.hasHeaderLength = true;
        result.headerLength_ = value;
        return this;
      }
      public Builder ClearHeaderLength() {
        PrepareBuilder();
        result.hasHeaderLength = false;
        result.headerLength_ = 0UL;
        return this;
      }
      
      public bool HasContentLength {
        get { return result.hasContentLength; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ContentLength {
        get { return result.ContentLength; }
        set { SetContentLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetContentLength(ulong value) {
        PrepareBuilder();
        result.hasContentLength = true;
        result.contentLength_ = value;
        return this;
      }
      public Builder ClearContentLength() {
        PrepareBuilder();
        result.hasContentLength = false;
        result.contentLength_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::orc.proto.StripeInformation> StripesList {
        get { return PrepareBuilder().stripes_; }
      }
      public int StripesCount {
        get { return result.StripesCount; }
      }
      public global::orc.proto.StripeInformation GetStripes(int index) {
        return result.GetStripes(index);
      }
      public Builder SetStripes(int index, global::orc.proto.StripeInformation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stripes_[index] = value;
        return this;
      }
      public Builder SetStripes(int index, global::orc.proto.StripeInformation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stripes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStripes(global::orc.proto.StripeInformation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.stripes_.Add(value);
        return this;
      }
      public Builder AddStripes(global::orc.proto.StripeInformation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.stripes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStripes(scg::IEnumerable<global::orc.proto.StripeInformation> values) {
        PrepareBuilder();
        result.stripes_.Add(values);
        return this;
      }
      public Builder ClearStripes() {
        PrepareBuilder();
        result.stripes_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::orc.proto.Type> TypesList {
        get { return PrepareBuilder().types_; }
      }
      public int TypesCount {
        get { return result.TypesCount; }
      }
      public global::orc.proto.Type GetTypes(int index) {
        return result.GetTypes(index);
      }
      public Builder SetTypes(int index, global::orc.proto.Type value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.types_[index] = value;
        return this;
      }
      public Builder SetTypes(int index, global::orc.proto.Type.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.types_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTypes(global::orc.proto.Type value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.types_.Add(value);
        return this;
      }
      public Builder AddTypes(global::orc.proto.Type.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.types_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTypes(scg::IEnumerable<global::orc.proto.Type> values) {
        PrepareBuilder();
        result.types_.Add(values);
        return this;
      }
      public Builder ClearTypes() {
        PrepareBuilder();
        result.types_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::orc.proto.UserMetadataItem> MetadataList {
        get { return PrepareBuilder().metadata_; }
      }
      public int MetadataCount {
        get { return result.MetadataCount; }
      }
      public global::orc.proto.UserMetadataItem GetMetadata(int index) {
        return result.GetMetadata(index);
      }
      public Builder SetMetadata(int index, global::orc.proto.UserMetadataItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.metadata_[index] = value;
        return this;
      }
      public Builder SetMetadata(int index, global::orc.proto.UserMetadataItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.metadata_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMetadata(global::orc.proto.UserMetadataItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.metadata_.Add(value);
        return this;
      }
      public Builder AddMetadata(global::orc.proto.UserMetadataItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.metadata_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMetadata(scg::IEnumerable<global::orc.proto.UserMetadataItem> values) {
        PrepareBuilder();
        result.metadata_.Add(values);
        return this;
      }
      public Builder ClearMetadata() {
        PrepareBuilder();
        result.metadata_.Clear();
        return this;
      }
      
      public bool HasNumberOfRows {
        get { return result.hasNumberOfRows; }
      }
      [global::System.CLSCompliant(false)]
      public ulong NumberOfRows {
        get { return result.NumberOfRows; }
        set { SetNumberOfRows(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetNumberOfRows(ulong value) {
        PrepareBuilder();
        result.hasNumberOfRows = true;
        result.numberOfRows_ = value;
        return this;
      }
      public Builder ClearNumberOfRows() {
        PrepareBuilder();
        result.hasNumberOfRows = false;
        result.numberOfRows_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::orc.proto.ColumnStatistics> StatisticsList {
        get { return PrepareBuilder().statistics_; }
      }
      public int StatisticsCount {
        get { return result.StatisticsCount; }
      }
      public global::orc.proto.ColumnStatistics GetStatistics(int index) {
        return result.GetStatistics(index);
      }
      public Builder SetStatistics(int index, global::orc.proto.ColumnStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statistics_[index] = value;
        return this;
      }
      public Builder SetStatistics(int index, global::orc.proto.ColumnStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statistics_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStatistics(global::orc.proto.ColumnStatistics value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statistics_.Add(value);
        return this;
      }
      public Builder AddStatistics(global::orc.proto.ColumnStatistics.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statistics_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStatistics(scg::IEnumerable<global::orc.proto.ColumnStatistics> values) {
        PrepareBuilder();
        result.statistics_.Add(values);
        return this;
      }
      public Builder ClearStatistics() {
        PrepareBuilder();
        result.statistics_.Clear();
        return this;
      }
      
      public bool HasRowIndexStride {
        get { return result.hasRowIndexStride; }
      }
      [global::System.CLSCompliant(false)]
      public uint RowIndexStride {
        get { return result.RowIndexStride; }
        set { SetRowIndexStride(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRowIndexStride(uint value) {
        PrepareBuilder();
        result.hasRowIndexStride = true;
        result.rowIndexStride_ = value;
        return this;
      }
      public Builder ClearRowIndexStride() {
        PrepareBuilder();
        result.hasRowIndexStride = false;
        result.rowIndexStride_ = 0;
        return this;
      }
    }
    static Footer() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PostScript : pb::GeneratedMessage<PostScript, PostScript.Builder> {
    private PostScript() { }
    private static readonly PostScript defaultInstance = new PostScript().MakeReadOnly();
    private static readonly string[] _postScriptFieldNames = new string[] { "compression", "compressionBlockSize", "footerLength", "magic", "metadataLength", "version", "writerVersion" };
    private static readonly uint[] _postScriptFieldTags = new uint[] { 16, 24, 8, 64002, 40, 34, 48 };
    public static PostScript DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PostScript DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PostScript ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_PostScript__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PostScript, PostScript.Builder> InternalFieldAccessors {
      get { return global::orc.proto.OrcProto.internal__static_orc_proto_PostScript__FieldAccessorTable; }
    }
    
    public const int FooterLengthFieldNumber = 1;
    private bool hasFooterLength;
    private ulong footerLength_;
    public bool HasFooterLength {
      get { return hasFooterLength; }
    }
    [global::System.CLSCompliant(false)]
    public ulong FooterLength {
      get { return footerLength_; }
    }
    
    public const int CompressionFieldNumber = 2;
    private bool hasCompression;
    private global::orc.proto.CompressionKind compression_ = global::orc.proto.CompressionKind.NONE;
    public bool HasCompression {
      get { return hasCompression; }
    }
    public global::orc.proto.CompressionKind Compression {
      get { return compression_; }
    }
    
    public const int CompressionBlockSizeFieldNumber = 3;
    private bool hasCompressionBlockSize;
    private ulong compressionBlockSize_;
    public bool HasCompressionBlockSize {
      get { return hasCompressionBlockSize; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CompressionBlockSize {
      get { return compressionBlockSize_; }
    }
    
    public const int VersionFieldNumber = 4;
    private int versionMemoizedSerializedSize;
    private pbc::PopsicleList<uint> version_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> VersionList {
      get { return pbc::Lists.AsReadOnly(version_); }
    }
    public int VersionCount {
      get { return version_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetVersion(int index) {
      return version_[index];
    }
    
    public const int MetadataLengthFieldNumber = 5;
    private bool hasMetadataLength;
    private ulong metadataLength_;
    public bool HasMetadataLength {
      get { return hasMetadataLength; }
    }
    [global::System.CLSCompliant(false)]
    public ulong MetadataLength {
      get { return metadataLength_; }
    }
    
    public const int WriterVersionFieldNumber = 6;
    private bool hasWriterVersion;
    private uint writerVersion_;
    public bool HasWriterVersion {
      get { return hasWriterVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint WriterVersion {
      get { return writerVersion_; }
    }
    
    public const int MagicFieldNumber = 8000;
    private bool hasMagic;
    private string magic_ = "";
    public bool HasMagic {
      get { return hasMagic; }
    }
    public string Magic {
      get { return magic_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _postScriptFieldNames;
      if (hasFooterLength) {
        output.WriteUInt64(1, field_names[2], FooterLength);
      }
      if (hasCompression) {
        output.WriteEnum(2, field_names[0], (int) Compression, Compression);
      }
      if (hasCompressionBlockSize) {
        output.WriteUInt64(3, field_names[1], CompressionBlockSize);
      }
      if (version_.Count > 0) {
        output.WritePackedUInt32Array(4, field_names[5], versionMemoizedSerializedSize, version_);
      }
      if (hasMetadataLength) {
        output.WriteUInt64(5, field_names[4], MetadataLength);
      }
      if (hasWriterVersion) {
        output.WriteUInt32(6, field_names[6], WriterVersion);
      }
      if (hasMagic) {
        output.WriteString(8000, field_names[3], Magic);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFooterLength) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, FooterLength);
      }
      if (hasCompression) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Compression);
      }
      if (hasCompressionBlockSize) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, CompressionBlockSize);
      }
      {
        int dataSize = 0;
        foreach (uint element in VersionList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        if (version_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        versionMemoizedSerializedSize = dataSize;
      }
      if (hasMetadataLength) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, MetadataLength);
      }
      if (hasWriterVersion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, WriterVersion);
      }
      if (hasMagic) {
        size += pb::CodedOutputStream.ComputeStringSize(8000, Magic);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PostScript ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PostScript ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PostScript ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PostScript ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PostScript ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PostScript ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PostScript ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PostScript ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PostScript ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PostScript ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PostScript MakeReadOnly() {
      version_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PostScript prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PostScript, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PostScript cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PostScript result;
      
      private PostScript PrepareBuilder() {
        if (resultIsReadOnly) {
          PostScript original = result;
          result = new PostScript();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PostScript MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::orc.proto.PostScript.Descriptor; }
      }
      
      public override PostScript DefaultInstanceForType {
        get { return global::orc.proto.PostScript.DefaultInstance; }
      }
      
      public override PostScript BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PostScript) {
          return MergeFrom((PostScript) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PostScript other) {
        if (other == global::orc.proto.PostScript.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFooterLength) {
          FooterLength = other.FooterLength;
        }
        if (other.HasCompression) {
          Compression = other.Compression;
        }
        if (other.HasCompressionBlockSize) {
          CompressionBlockSize = other.CompressionBlockSize;
        }
        if (other.version_.Count != 0) {
          result.version_.Add(other.version_);
        }
        if (other.HasMetadataLength) {
          MetadataLength = other.MetadataLength;
        }
        if (other.HasWriterVersion) {
          WriterVersion = other.WriterVersion;
        }
        if (other.HasMagic) {
          Magic = other.Magic;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_postScriptFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _postScriptFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasFooterLength = input.ReadUInt64(ref result.footerLength_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.compression_, out unknown)) {
                result.hasCompression = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              result.hasCompressionBlockSize = input.ReadUInt64(ref result.compressionBlockSize_);
              break;
            }
            case 34:
            case 32: {
              input.ReadUInt32Array(tag, field_name, result.version_);
              break;
            }
            case 40: {
              result.hasMetadataLength = input.ReadUInt64(ref result.metadataLength_);
              break;
            }
            case 48: {
              result.hasWriterVersion = input.ReadUInt32(ref result.writerVersion_);
              break;
            }
            case 64002: {
              result.hasMagic = input.ReadString(ref result.magic_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFooterLength {
        get { return result.hasFooterLength; }
      }
      [global::System.CLSCompliant(false)]
      public ulong FooterLength {
        get { return result.FooterLength; }
        set { SetFooterLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFooterLength(ulong value) {
        PrepareBuilder();
        result.hasFooterLength = true;
        result.footerLength_ = value;
        return this;
      }
      public Builder ClearFooterLength() {
        PrepareBuilder();
        result.hasFooterLength = false;
        result.footerLength_ = 0UL;
        return this;
      }
      
      public bool HasCompression {
       get { return result.hasCompression; }
      }
      public global::orc.proto.CompressionKind Compression {
        get { return result.Compression; }
        set { SetCompression(value); }
      }
      public Builder SetCompression(global::orc.proto.CompressionKind value) {
        PrepareBuilder();
        result.hasCompression = true;
        result.compression_ = value;
        return this;
      }
      public Builder ClearCompression() {
        PrepareBuilder();
        result.hasCompression = false;
        result.compression_ = global::orc.proto.CompressionKind.NONE;
        return this;
      }
      
      public bool HasCompressionBlockSize {
        get { return result.hasCompressionBlockSize; }
      }
      [global::System.CLSCompliant(false)]
      public ulong CompressionBlockSize {
        get { return result.CompressionBlockSize; }
        set { SetCompressionBlockSize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCompressionBlockSize(ulong value) {
        PrepareBuilder();
        result.hasCompressionBlockSize = true;
        result.compressionBlockSize_ = value;
        return this;
      }
      public Builder ClearCompressionBlockSize() {
        PrepareBuilder();
        result.hasCompressionBlockSize = false;
        result.compressionBlockSize_ = 0UL;
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> VersionList {
        get { return PrepareBuilder().version_; }
      }
      public int VersionCount {
        get { return result.VersionCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetVersion(int index) {
        return result.GetVersion(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVersion(int index, uint value) {
        PrepareBuilder();
        result.version_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddVersion(uint value) {
        PrepareBuilder();
        result.version_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeVersion(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.version_.Add(values);
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.version_.Clear();
        return this;
      }
      
      public bool HasMetadataLength {
        get { return result.hasMetadataLength; }
      }
      [global::System.CLSCompliant(false)]
      public ulong MetadataLength {
        get { return result.MetadataLength; }
        set { SetMetadataLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMetadataLength(ulong value) {
        PrepareBuilder();
        result.hasMetadataLength = true;
        result.metadataLength_ = value;
        return this;
      }
      public Builder ClearMetadataLength() {
        PrepareBuilder();
        result.hasMetadataLength = false;
        result.metadataLength_ = 0UL;
        return this;
      }
      
      public bool HasWriterVersion {
        get { return result.hasWriterVersion; }
      }
      [global::System.CLSCompliant(false)]
      public uint WriterVersion {
        get { return result.WriterVersion; }
        set { SetWriterVersion(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetWriterVersion(uint value) {
        PrepareBuilder();
        result.hasWriterVersion = true;
        result.writerVersion_ = value;
        return this;
      }
      public Builder ClearWriterVersion() {
        PrepareBuilder();
        result.hasWriterVersion = false;
        result.writerVersion_ = 0;
        return this;
      }
      
      public bool HasMagic {
        get { return result.hasMagic; }
      }
      public string Magic {
        get { return result.Magic; }
        set { SetMagic(value); }
      }
      public Builder SetMagic(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMagic = true;
        result.magic_ = value;
        return this;
      }
      public Builder ClearMagic() {
        PrepareBuilder();
        result.hasMagic = false;
        result.magic_ = "";
        return this;
      }
    }
    static PostScript() {
      object.ReferenceEquals(global::orc.proto.OrcProto.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
